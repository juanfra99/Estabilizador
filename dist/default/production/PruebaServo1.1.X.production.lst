

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Nov 30 22:59:31 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _TMR0	set	4054
    67  0000                     _LATDbits	set	3980
    68  0000                     _TRISDbits	set	3989
    69  0000                     _TRISD	set	3989
    70  0000                     _PORTD	set	3971
    71  0000                     _SSPBUF	set	4041
    72  0000                     _PIR1bits	set	3998
    73  0000                     _SSPCON2bits	set	4037
    74  0000                     _SSPADD	set	4040
    75  0000                     _SSPCON2	set	4037
    76  0000                     _SSPCON1	set	4038
    77  0000                     _SSPSTAT	set	4039
    78  0000                     _T0CONbits	set	4053
    79  0000                     _T0CON	set	4053
    80  0000                     _INTCONbits	set	4082
    81  0000                     _LATBbits	set	3978
    82  0000                     _TRISBbits	set	3987
    83  0000                     _ADCON1bits	set	4033
    84                           
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  001778                     __pcinit:
    89                           	opt stack 0
    90  001778                     start_initialization:
    91                           	opt stack 0
    92  001778                     __initialization:
    93                           	opt stack 0
    94                           
    95                           ; Clear objects allocated to BANK0 (27 bytes)
    96  001778  EE00  F07E         	lfsr	0,__pbssBANK0
    97  00177C  0E1B               	movlw	27
    98  00177E                     clear_0:
    99  00177E  6AEE               	clrf	postinc0,c
   100  001780  06E8               	decf	wreg,f,c
   101  001782  E1FD               	bnz	clear_0
   102                           
   103                           ; Clear objects allocated to COMRAM (17 bytes)
   104  001784  EE00  F03B         	lfsr	0,__pbssCOMRAM
   105  001788  0E11               	movlw	17
   106  00178A                     clear_1:
   107  00178A  6AEE               	clrf	postinc0,c
   108  00178C  06E8               	decf	wreg,f,c
   109  00178E  E1FD               	bnz	clear_1
   110  001790                     end_of_initialization:
   111                           	opt stack 0
   112  001790                     __end_of__initialization:
   113                           	opt stack 0
   114  001790  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   115  001792  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   116  001794  0100               	movlb	0
   117  001796  EF09  F008         	goto	_main	;jump to C main() function
   118                           postinc0	equ	0xFEE
   119                           wreg	equ	0xFE8
   120                           
   121                           	psect	bssCOMRAM
   122  00003B                     __pbssCOMRAM:
   123                           	opt stack 0
   124  00003B                     _v1:
   125                           	opt stack 0
   126  00003B                     	ds	3
   127  00003E                     _gx:
   128                           	opt stack 0
   129  00003E                     	ds	3
   130  000041                     _az:
   131                           	opt stack 0
   132  000041                     	ds	3
   133  000044                     _ay:
   134                           	opt stack 0
   135  000044                     	ds	3
   136  000047                     _ax:
   137                           	opt stack 0
   138  000047                     	ds	3
   139  00004A                     _cont_sr:
   140                           	opt stack 0
   141  00004A                     	ds	2
   142                           postinc0	equ	0xFEE
   143                           wreg	equ	0xFE8
   144                           
   145                           	psect	bssBANK0
   146  00007E                     __pbssBANK0:
   147                           	opt stack 0
   148  00007E                     _buffer:
   149                           	opt stack 0
   150  00007E                     	ds	10
   151  000088                     _data_s:
   152                           	opt stack 0
   153  000088                     	ds	8
   154  000090                     _value:
   155                           	opt stack 0
   156  000090                     	ds	3
   157  000093                     _gz:
   158                           	opt stack 0
   159  000093                     	ds	3
   160  000096                     _gy:
   161                           	opt stack 0
   162  000096                     	ds	3
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           
   166                           	psect	cstackBANK0
   167  000060                     __pcstackBANK0:
   168                           	opt stack 0
   169  000060                     ?_map:
   170                           	opt stack 0
   171  000060                     map@x:
   172                           	opt stack 0
   173                           
   174                           ; 4 bytes @ 0x0
   175  000060                     	ds	4
   176  000064                     map@eMin:
   177                           	opt stack 0
   178                           
   179                           ; 4 bytes @ 0x4
   180  000064                     	ds	4
   181  000068                     map@eMax:
   182                           	opt stack 0
   183                           
   184                           ; 4 bytes @ 0x8
   185  000068                     	ds	4
   186  00006C                     map@sMin:
   187                           	opt stack 0
   188                           
   189                           ; 4 bytes @ 0xC
   190  00006C                     	ds	4
   191  000070                     map@sMax:
   192                           	opt stack 0
   193                           
   194                           ; 4 bytes @ 0x10
   195  000070                     	ds	4
   196  000074                     ?___altoft:
   197                           	opt stack 0
   198  000074                     ___altoft@c:
   199                           	opt stack 0
   200                           
   201                           ; 4 bytes @ 0x14
   202  000074                     	ds	4
   203  000078                     ??___altoft:
   204                           
   205                           ; 1 bytes @ 0x18
   206  000078                     	ds	4
   207  00007C                     ??_main:
   208                           
   209                           ; 1 bytes @ 0x1C
   210  00007C                     	ds	2
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	cstackCOMRAM
   215  000001                     __pcstackCOMRAM:
   216                           	opt stack 0
   217  000001                     ??_TMR0_ISR:
   218  000001                     
   219                           ; 2 bytes @ 0x0
   220  000001                     	ds	18
   221  000013                     ??_I2C_Write:
   222  000013                     ?___awdiv:
   223                           	opt stack 0
   224  000013                     ?___ftpack:
   225                           	opt stack 0
   226  000013                     ?___lmul:
   227                           	opt stack 0
   228  000013                     ?___fttol:
   229                           	opt stack 0
   230  000013                     I2C_Init_Master@sp_i2c:
   231                           	opt stack 0
   232  000013                     ___awdiv@dividend:
   233                           	opt stack 0
   234  000013                     ___ftpack@arg:
   235                           	opt stack 0
   236  000013                     ___fttol@f1:
   237                           	opt stack 0
   238  000013                     ___lmul@multiplier:
   239                           	opt stack 0
   240                           
   241                           ; 4 bytes @ 0x12
   242  000013                     	ds	1
   243  000014                     I2C_Write@b_ok:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x13
   247  000014                     	ds	1
   248  000015                     ___awdiv@divisor:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x14
   252  000015                     	ds	1
   253  000016                     I2C_Write@data:
   254                           	opt stack 0
   255  000016                     ___ftpack@exp:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x15
   259  000016                     	ds	1
   260  000017                     ??___fttol:
   261  000017                     MPU6050_Write@data:
   262                           	opt stack 0
   263  000017                     ___awdiv@counter:
   264                           	opt stack 0
   265  000017                     ___ftpack@sign:
   266                           	opt stack 0
   267  000017                     ___lmul@multiplicand:
   268                           	opt stack 0
   269                           
   270                           ; 4 bytes @ 0x16
   271  000017                     	ds	1
   272  000018                     ??___ftpack:
   273  000018                     MPU6050_Write@add:
   274                           	opt stack 0
   275  000018                     ___awdiv@sign:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x17
   279  000018                     	ds	1
   280  000019                     ??_MPU6050_Init:
   281  000019                     ___awdiv@quotient:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x18
   285  000019                     	ds	2
   286  00001B                     Servo_1_Write@ang:
   287                           	opt stack 0
   288  00001B                     ___lmul@product:
   289                           	opt stack 0
   290                           
   291                           ; 4 bytes @ 0x1A
   292  00001B                     	ds	1
   293  00001C                     ___fttol@sign1:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x1B
   297  00001C                     	ds	1
   298  00001D                     ___fttol@lval:
   299                           	opt stack 0
   300                           
   301                           ; 4 bytes @ 0x1C
   302  00001D                     	ds	2
   303  00001F                     ?___aldiv:
   304                           	opt stack 0
   305  00001F                     ___aldiv@dividend:
   306                           	opt stack 0
   307                           
   308                           ; 4 bytes @ 0x1E
   309  00001F                     	ds	2
   310  000021                     ___fttol@exp1:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x20
   314  000021                     	ds	2
   315  000023                     ___aldiv@divisor:
   316                           	opt stack 0
   317                           
   318                           ; 4 bytes @ 0x22
   319  000023                     	ds	4
   320  000027                     ___aldiv@counter:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x26
   324  000027                     	ds	1
   325  000028                     ___aldiv@sign:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x27
   329  000028                     	ds	1
   330  000029                     ___aldiv@quotient:
   331                           	opt stack 0
   332                           
   333                           ; 4 bytes @ 0x28
   334  000029                     	ds	4
   335  00002D                     ??_map:
   336                           
   337                           ; 1 bytes @ 0x2C
   338  00002D                     	ds	12
   339  000039                     ___altoft@exp:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x38
   343  000039                     	ds	1
   344  00003A                     ___altoft@sign:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x39
   348  00003A                     	ds	1
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           
   352 ;;
   353 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   354 ;;
   355 ;; *************** function _main *****************
   356 ;; Defined at:
   357 ;;		line 39 in file "Servomotor.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   371 ;;      Params:         0       0       0       0       0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0       0       0       0       0
   373 ;;      Temps:          0       2       0       0       0       0       0       0       0
   374 ;;      Totals:         0       2       0       0       0       0       0       0       0
   375 ;;Total ram usage:        2 bytes
   376 ;; Hardware stack levels required when called:    4
   377 ;; This function calls:
   378 ;;		_I2C_Init_Master
   379 ;;		_MPU6050_Init
   380 ;;		_Servo_1_Write
   381 ;;		_Servo_Init
   382 ;;		___altoft
   383 ;;		___fttol
   384 ;;		_map
   385 ;; This function is called by:
   386 ;;		Startup code after reset
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text0
   391  001012                     __ptext0:
   392                           	opt stack 0
   393  001012                     _main:
   394                           	opt stack 27
   395                           
   396                           ;Servomotor.c: 40: ADCON1bits.PCFG = 0x0F;
   397                           
   398                           ;incstack = 0
   399  001012  80C1               	bsf	4033,0,c	;volatile
   400  001014  82C1               	bsf	4033,1,c	;volatile
   401  001016  84C1               	bsf	4033,2,c	;volatile
   402  001018  86C1               	bsf	4033,3,c	;volatile
   403                           
   404                           ;Servomotor.c: 41: I2C_Init_Master(0x80);
   405  00101A  0E80               	movlw	128
   406  00101C  EC94  F00B         	call	_I2C_Init_Master
   407                           
   408                           ;Servomotor.c: 42: MPU6050_Init();
   409  001020  EC3C  F00B         	call	_MPU6050_Init	;wreg free
   410                           
   411                           ;Servomotor.c: 43: Servo_Init();
   412  001024  ECEC  F00B         	call	_Servo_Init	;wreg free
   413                           
   414                           ;Servomotor.c: 45: Servo_1_Write(0);
   415  001028  0E00               	movlw	0
   416  00102A  ECAA  F00B         	call	_Servo_1_Write
   417                           
   418                           ;Servomotor.c: 46: _delay((unsigned long)((1000)*(48000000/4000.0)));
   419  00102E  0E3D               	movlw	61
   420  001030  0100               	movlb	0	; () banked
   421  001032  6F7D               	movwf	(??_main+1)& (0+255),b
   422  001034  0EE1               	movlw	225
   423  001036  6F7C               	movwf	??_main& (0+255),b
   424  001038  0E3F               	movlw	63
   425  00103A                     u1167:
   426  00103A  2EE8               	decfsz	wreg,f,c
   427  00103C  D7FE               	bra	u1167
   428  00103E  2F7C               	decfsz	??_main& (0+255),f,b
   429  001040  D7FC               	bra	u1167
   430  001042  2F7D               	decfsz	(??_main+1)& (0+255),f,b
   431  001044  D7FA               	bra	u1167
   432  001046  D000               	nop2	
   433                           
   434                           ;Servomotor.c: 49: value = map(v1, -10, 10, 180, 0);
   435                           
   436                           ;Servomotor.c: 47: while (1) {
   437  001048  0E00               	movlw	0
   438  00104A  0100               	movlb	0	; () banked
   439  00104C  6F70               	movwf	map@sMax& (0+255),b
   440  00104E  0E00               	movlw	0
   441  001050  6F71               	movwf	(map@sMax+1)& (0+255),b
   442  001052  0E00               	movlw	0
   443  001054  6F72               	movwf	(map@sMax+2)& (0+255),b
   444  001056  0E00               	movlw	0
   445  001058  6F73               	movwf	(map@sMax+3)& (0+255),b
   446  00105A  0EB4               	movlw	180
   447  00105C  6F6C               	movwf	map@sMin& (0+255),b
   448  00105E  0E00               	movlw	0
   449  001060  6F6D               	movwf	(map@sMin+1)& (0+255),b
   450  001062  0E00               	movlw	0
   451  001064  6F6E               	movwf	(map@sMin+2)& (0+255),b
   452  001066  0E00               	movlw	0
   453  001068  6F6F               	movwf	(map@sMin+3)& (0+255),b
   454  00106A  0E0A               	movlw	10
   455  00106C  6F68               	movwf	map@eMax& (0+255),b
   456  00106E  0E00               	movlw	0
   457  001070  6F69               	movwf	(map@eMax+1)& (0+255),b
   458  001072  0E00               	movlw	0
   459  001074  6F6A               	movwf	(map@eMax+2)& (0+255),b
   460  001076  0E00               	movlw	0
   461  001078  6F6B               	movwf	(map@eMax+3)& (0+255),b
   462  00107A  0EF6               	movlw	246
   463  00107C  6F64               	movwf	map@eMin& (0+255),b
   464  00107E  0EFF               	movlw	255
   465  001080  6F65               	movwf	(map@eMin+1)& (0+255),b
   466  001082  0EFF               	movlw	255
   467  001084  6F66               	movwf	(map@eMin+2)& (0+255),b
   468  001086  0EFF               	movlw	255
   469  001088  6F67               	movwf	(map@eMin+3)& (0+255),b
   470  00108A  C03B  F013         	movff	_v1,___fttol@f1
   471  00108E  C03C  F014         	movff	_v1+1,___fttol@f1+1
   472  001092  C03D  F015         	movff	_v1+2,___fttol@f1+2
   473  001096  ECA7  F008         	call	___fttol	;wreg free
   474  00109A  C013  F060         	movff	?___fttol,map@x
   475  00109E  C014  F061         	movff	?___fttol+1,map@x+1
   476  0010A2  C015  F062         	movff	?___fttol+2,map@x+2
   477  0010A6  C016  F063         	movff	?___fttol+3,map@x+3
   478  0010AA  EC21  F009         	call	_map	;wreg free
   479  0010AE  C060  F074         	movff	?_map,___altoft@c
   480  0010B2  C061  F075         	movff	?_map+1,___altoft@c+1
   481  0010B6  C062  F076         	movff	?_map+2,___altoft@c+2
   482  0010BA  C063  F077         	movff	?_map+3,___altoft@c+3
   483  0010BE  ECFF  F00A         	call	___altoft	;wreg free
   484  0010C2  C074  F090         	movff	?___altoft,_value
   485  0010C6  C075  F091         	movff	?___altoft+1,_value+1
   486  0010CA  C076  F092         	movff	?___altoft+2,_value+2
   487                           
   488                           ;Servomotor.c: 51: Servo_1_Write(0);
   489  0010CE  0E00               	movlw	0
   490  0010D0  ECAA  F00B         	call	_Servo_1_Write
   491                           
   492                           ;Servomotor.c: 52: _delay((unsigned long)((1000)*(48000000/4000.0)));
   493  0010D4  0E3D               	movlw	61
   494  0010D6  0100               	movlb	0	; () banked
   495  0010D8  6F7D               	movwf	(??_main+1)& (0+255),b
   496  0010DA  0EE1               	movlw	225
   497  0010DC  6F7C               	movwf	??_main& (0+255),b
   498  0010DE  0E3F               	movlw	63
   499  0010E0                     u1177:
   500  0010E0  2EE8               	decfsz	wreg,f,c
   501  0010E2  D7FE               	bra	u1177
   502  0010E4  2F7C               	decfsz	??_main& (0+255),f,b
   503  0010E6  D7FC               	bra	u1177
   504  0010E8  2F7D               	decfsz	(??_main+1)& (0+255),f,b
   505  0010EA  D7FA               	bra	u1177
   506  0010EC  D000               	nop2	
   507                           
   508                           ;Servomotor.c: 53: Servo_1_Write(90);
   509  0010EE  0E5A               	movlw	90
   510  0010F0  ECAA  F00B         	call	_Servo_1_Write
   511                           
   512                           ;Servomotor.c: 54: _delay((unsigned long)((1000)*(48000000/4000.0)));
   513  0010F4  0E3D               	movlw	61
   514  0010F6  0100               	movlb	0	; () banked
   515  0010F8  6F7D               	movwf	(??_main+1)& (0+255),b
   516  0010FA  0EE1               	movlw	225
   517  0010FC  6F7C               	movwf	??_main& (0+255),b
   518  0010FE  0E3F               	movlw	63
   519  001100                     u1187:
   520  001100  2EE8               	decfsz	wreg,f,c
   521  001102  D7FE               	bra	u1187
   522  001104  2F7C               	decfsz	??_main& (0+255),f,b
   523  001106  D7FC               	bra	u1187
   524  001108  2F7D               	decfsz	(??_main+1)& (0+255),f,b
   525  00110A  D7FA               	bra	u1187
   526  00110C  D000               	nop2	
   527                           
   528                           ;Servomotor.c: 55: Servo_1_Write(180);
   529  00110E  0EB4               	movlw	180
   530  001110  ECAA  F00B         	call	_Servo_1_Write
   531                           
   532                           ;Servomotor.c: 56: _delay((unsigned long)((1000)*(48000000/4000.0)));
   533  001114  0E3D               	movlw	61
   534  001116  0100               	movlb	0	; () banked
   535  001118  6F7D               	movwf	(??_main+1)& (0+255),b
   536  00111A  0EE1               	movlw	225
   537  00111C  6F7C               	movwf	??_main& (0+255),b
   538  00111E  0E3F               	movlw	63
   539  001120                     u1197:
   540  001120  2EE8               	decfsz	wreg,f,c
   541  001122  D7FE               	bra	u1197
   542  001124  2F7C               	decfsz	??_main& (0+255),f,b
   543  001126  D7FC               	bra	u1197
   544  001128  2F7D               	decfsz	(??_main+1)& (0+255),f,b
   545  00112A  D7FA               	bra	u1197
   546  00112C  D000               	nop2	
   547                           
   548                           ;Servomotor.c: 57: Servo_1_Write(-180);
   549  00112E  0E4C               	movlw	76
   550  001130  ECAA  F00B         	call	_Servo_1_Write
   551                           
   552                           ;Servomotor.c: 58: _delay((unsigned long)((1000)*(48000000/4000.0)));
   553  001134  0E3D               	movlw	61
   554  001136  0100               	movlb	0	; () banked
   555  001138  6F7D               	movwf	(??_main+1)& (0+255),b
   556  00113A  0EE1               	movlw	225
   557  00113C  6F7C               	movwf	??_main& (0+255),b
   558  00113E  0E3F               	movlw	63
   559  001140                     u1207:
   560  001140  2EE8               	decfsz	wreg,f,c
   561  001142  D7FE               	bra	u1207
   562  001144  2F7C               	decfsz	??_main& (0+255),f,b
   563  001146  D7FC               	bra	u1207
   564  001148  2F7D               	decfsz	(??_main+1)& (0+255),f,b
   565  00114A  D7FA               	bra	u1207
   566  00114C  D77C               	goto	L1
   567  00114E                     __end_of_main:
   568                           	opt stack 0
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           
   572 ;; *************** function _map *****************
   573 ;; Defined at:
   574 ;;		line 29 in file "Servomotor.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;  x               4    0[BANK0 ] long 
   577 ;;  eMin            4    4[BANK0 ] long 
   578 ;;  eMax            4    8[BANK0 ] long 
   579 ;;  sMin            4   12[BANK0 ] long 
   580 ;;  sMax            4   16[BANK0 ] long 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  4    0[BANK0 ] long 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   592 ;;      Params:         0      20       0       0       0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0
   594 ;;      Temps:         12       0       0       0       0       0       0       0       0
   595 ;;      Totals:        12      20       0       0       0       0       0       0       0
   596 ;;Total ram usage:       32 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    2
   599 ;; This function calls:
   600 ;;		___aldiv
   601 ;;		___lmul
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text1
   608  001242                     __ptext1:
   609                           	opt stack 0
   610  001242                     _map:
   611                           	opt stack 28
   612                           
   613                           ;Servomotor.c: 30: return (x - eMin)*(sMax - sMin) / (eMax - eMin) + sMin;
   614                           
   615                           ;incstack = 0
   616  001242  C064  F02D         	movff	map@eMin,??_map
   617  001246  C065  F02E         	movff	map@eMin+1,??_map+1
   618  00124A  C066  F02F         	movff	map@eMin+2,??_map+2
   619  00124E  C067  F030         	movff	map@eMin+3,??_map+3
   620  001252  1E2D               	comf	??_map,f,c
   621  001254  1E2E               	comf	??_map+1,f,c
   622  001256  1E2F               	comf	??_map+2,f,c
   623  001258  1E30               	comf	??_map+3,f,c
   624  00125A  2A2D               	incf	??_map,f,c
   625  00125C  0E00               	movlw	0
   626  00125E  222E               	addwfc	??_map+1,f,c
   627  001260  222F               	addwfc	??_map+2,f,c
   628  001262  2230               	addwfc	??_map+3,f,c
   629  001264  0100               	movlb	0	; () banked
   630  001266  5160               	movf	map@x& (0+255),w,b
   631  001268  242D               	addwf	??_map,w,c
   632  00126A  6E13               	movwf	___lmul@multiplier,c
   633  00126C  5161               	movf	(map@x+1)& (0+255),w,b
   634  00126E  202E               	addwfc	??_map+1,w,c
   635  001270  6E14               	movwf	___lmul@multiplier+1,c
   636  001272  5162               	movf	(map@x+2)& (0+255),w,b
   637  001274  202F               	addwfc	??_map+2,w,c
   638  001276  6E15               	movwf	___lmul@multiplier+2,c
   639  001278  5163               	movf	(map@x+3)& (0+255),w,b
   640  00127A  2030               	addwfc	??_map+3,w,c
   641  00127C  6E16               	movwf	___lmul@multiplier+3,c
   642  00127E  C06C  F031         	movff	map@sMin,??_map+4
   643  001282  C06D  F032         	movff	map@sMin+1,??_map+5
   644  001286  C06E  F033         	movff	map@sMin+2,??_map+6
   645  00128A  C06F  F034         	movff	map@sMin+3,??_map+7
   646  00128E  1E31               	comf	??_map+4,f,c
   647  001290  1E32               	comf	??_map+5,f,c
   648  001292  1E33               	comf	??_map+6,f,c
   649  001294  1E34               	comf	??_map+7,f,c
   650  001296  2A31               	incf	??_map+4,f,c
   651  001298  0E00               	movlw	0
   652  00129A  2232               	addwfc	??_map+5,f,c
   653  00129C  2233               	addwfc	??_map+6,f,c
   654  00129E  2234               	addwfc	??_map+7,f,c
   655  0012A0  5170               	movf	map@sMax& (0+255),w,b
   656  0012A2  2431               	addwf	??_map+4,w,c
   657  0012A4  6E17               	movwf	___lmul@multiplicand,c
   658  0012A6  5171               	movf	(map@sMax+1)& (0+255),w,b
   659  0012A8  2032               	addwfc	??_map+5,w,c
   660  0012AA  6E18               	movwf	___lmul@multiplicand+1,c
   661  0012AC  5172               	movf	(map@sMax+2)& (0+255),w,b
   662  0012AE  2033               	addwfc	??_map+6,w,c
   663  0012B0  6E19               	movwf	___lmul@multiplicand+2,c
   664  0012B2  5173               	movf	(map@sMax+3)& (0+255),w,b
   665  0012B4  2034               	addwfc	??_map+7,w,c
   666  0012B6  6E1A               	movwf	___lmul@multiplicand+3,c
   667  0012B8  EC69  F00B         	call	___lmul	;wreg free
   668  0012BC  C013  F01F         	movff	?___lmul,___aldiv@dividend
   669  0012C0  C014  F020         	movff	?___lmul+1,___aldiv@dividend+1
   670  0012C4  C015  F021         	movff	?___lmul+2,___aldiv@dividend+2
   671  0012C8  C016  F022         	movff	?___lmul+3,___aldiv@dividend+3
   672  0012CC  C064  F035         	movff	map@eMin,??_map+8
   673  0012D0  C065  F036         	movff	map@eMin+1,??_map+9
   674  0012D4  C066  F037         	movff	map@eMin+2,??_map+10
   675  0012D8  C067  F038         	movff	map@eMin+3,??_map+11
   676  0012DC  1E35               	comf	??_map+8,f,c
   677  0012DE  1E36               	comf	??_map+9,f,c
   678  0012E0  1E37               	comf	??_map+10,f,c
   679  0012E2  1E38               	comf	??_map+11,f,c
   680  0012E4  2A35               	incf	??_map+8,f,c
   681  0012E6  0E00               	movlw	0
   682  0012E8  2236               	addwfc	??_map+9,f,c
   683  0012EA  2237               	addwfc	??_map+10,f,c
   684  0012EC  2238               	addwfc	??_map+11,f,c
   685  0012EE  0100               	movlb	0	; () banked
   686  0012F0  5168               	movf	map@eMax& (0+255),w,b
   687  0012F2  2435               	addwf	??_map+8,w,c
   688  0012F4  6E23               	movwf	___aldiv@divisor,c
   689  0012F6  5169               	movf	(map@eMax+1)& (0+255),w,b
   690  0012F8  2036               	addwfc	??_map+9,w,c
   691  0012FA  6E24               	movwf	___aldiv@divisor+1,c
   692  0012FC  516A               	movf	(map@eMax+2)& (0+255),w,b
   693  0012FE  2037               	addwfc	??_map+10,w,c
   694  001300  6E25               	movwf	___aldiv@divisor+2,c
   695  001302  516B               	movf	(map@eMax+3)& (0+255),w,b
   696  001304  2038               	addwfc	??_map+11,w,c
   697  001306  6E26               	movwf	___aldiv@divisor+3,c
   698  001308  EC00  F00A         	call	___aldiv	;wreg free
   699  00130C  0100               	movlb	0	; () banked
   700  00130E  516C               	movf	map@sMin& (0+255),w,b
   701  001310  241F               	addwf	?___aldiv,w,c
   702  001312  6F60               	movwf	?_map& (0+255),b
   703  001314  516D               	movf	(map@sMin+1)& (0+255),w,b
   704  001316  2020               	addwfc	?___aldiv+1,w,c
   705  001318  6F61               	movwf	(?_map+1)& (0+255),b
   706  00131A  516E               	movf	(map@sMin+2)& (0+255),w,b
   707  00131C  2021               	addwfc	?___aldiv+2,w,c
   708  00131E  6F62               	movwf	(?_map+2)& (0+255),b
   709  001320  516F               	movf	(map@sMin+3)& (0+255),w,b
   710  001322  2022               	addwfc	?___aldiv+3,w,c
   711  001324  6F63               	movwf	(?_map+3)& (0+255),b
   712  001326  0012               	return	
   713  001328                     __end_of_map:
   714                           	opt stack 0
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           
   718 ;; *************** function ___lmul *****************
   719 ;; Defined at:
   720 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  multiplier      4   18[COMRAM] unsigned long 
   723 ;;  multiplicand    4   22[COMRAM] unsigned long 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  product         4   26[COMRAM] unsigned long 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  4   18[COMRAM] unsigned long 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   735 ;;      Params:         8       0       0       0       0       0       0       0       0
   736 ;;      Locals:         4       0       0       0       0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0
   738 ;;      Totals:        12       0       0       0       0       0       0       0       0
   739 ;;Total ram usage:       12 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_map
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text2
   750  0016D2                     __ptext2:
   751                           	opt stack 0
   752  0016D2                     ___lmul:
   753                           	opt stack 28
   754                           
   755                           ; BSR set to: 0
   756                           ;incstack = 0
   757  0016D2  0E00               	movlw	0
   758  0016D4  6E1B               	movwf	___lmul@product,c
   759  0016D6  0E00               	movlw	0
   760  0016D8  6E1C               	movwf	___lmul@product+1,c
   761  0016DA  0E00               	movlw	0
   762  0016DC  6E1D               	movwf	___lmul@product+2,c
   763  0016DE  0E00               	movlw	0
   764  0016E0  6E1E               	movwf	___lmul@product+3,c
   765  0016E2  A013               	btfss	___lmul@multiplier,0,c
   766  0016E4  D008               	goto	l305
   767  0016E6  5017               	movf	___lmul@multiplicand,w,c
   768  0016E8  261B               	addwf	___lmul@product,f,c
   769  0016EA  5018               	movf	___lmul@multiplicand+1,w,c
   770  0016EC  221C               	addwfc	___lmul@product+1,f,c
   771  0016EE  5019               	movf	___lmul@multiplicand+2,w,c
   772  0016F0  221D               	addwfc	___lmul@product+2,f,c
   773  0016F2  501A               	movf	___lmul@multiplicand+3,w,c
   774  0016F4  221E               	addwfc	___lmul@product+3,f,c
   775  0016F6                     l305:
   776  0016F6  90D8               	bcf	status,0,c
   777  0016F8  3617               	rlcf	___lmul@multiplicand,f,c
   778  0016FA  3618               	rlcf	___lmul@multiplicand+1,f,c
   779  0016FC  3619               	rlcf	___lmul@multiplicand+2,f,c
   780  0016FE  361A               	rlcf	___lmul@multiplicand+3,f,c
   781  001700  90D8               	bcf	status,0,c
   782  001702  3216               	rrcf	___lmul@multiplier+3,f,c
   783  001704  3215               	rrcf	___lmul@multiplier+2,f,c
   784  001706  3214               	rrcf	___lmul@multiplier+1,f,c
   785  001708  3213               	rrcf	___lmul@multiplier,f,c
   786  00170A  5013               	movf	___lmul@multiplier,w,c
   787  00170C  1014               	iorwf	___lmul@multiplier+1,w,c
   788  00170E  1015               	iorwf	___lmul@multiplier+2,w,c
   789  001710  1016               	iorwf	___lmul@multiplier+3,w,c
   790  001712  A4D8               	btfss	status,2,c
   791  001714  D7E6               	goto	l304
   792  001716  C01B  F013         	movff	___lmul@product,?___lmul
   793  00171A  C01C  F014         	movff	___lmul@product+1,?___lmul+1
   794  00171E  C01D  F015         	movff	___lmul@product+2,?___lmul+2
   795  001722  C01E  F016         	movff	___lmul@product+3,?___lmul+3
   796  001726  0012               	return		;funcret
   797  001728                     __end_of___lmul:
   798                           	opt stack 0
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           status	equ	0xFD8
   802                           
   803 ;; *************** function ___aldiv *****************
   804 ;; Defined at:
   805 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  dividend        4   30[COMRAM] long 
   808 ;;  divisor         4   34[COMRAM] long 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  quotient        4   40[COMRAM] long 
   811 ;;  sign            1   39[COMRAM] unsigned char 
   812 ;;  counter         1   38[COMRAM] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  4   30[COMRAM] long 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   822 ;;      Params:         8       0       0       0       0       0       0       0       0
   823 ;;      Locals:         6       0       0       0       0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0
   825 ;;      Totals:        14       0       0       0       0       0       0       0       0
   826 ;;Total ram usage:       14 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_map
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text3
   837  001400                     __ptext3:
   838                           	opt stack 0
   839  001400                     ___aldiv:
   840                           	opt stack 28
   841                           
   842                           ;incstack = 0
   843  001400  0E00               	movlw	0
   844  001402  6E28               	movwf	___aldiv@sign,c
   845  001404  AE26               	btfss	___aldiv@divisor+3,7,c
   846  001406  D00A               	goto	l348
   847  001408  1E26               	comf	___aldiv@divisor+3,f,c
   848  00140A  1E25               	comf	___aldiv@divisor+2,f,c
   849  00140C  1E24               	comf	___aldiv@divisor+1,f,c
   850  00140E  6C23               	negf	___aldiv@divisor,c
   851  001410  0E00               	movlw	0
   852  001412  2224               	addwfc	___aldiv@divisor+1,f,c
   853  001414  2225               	addwfc	___aldiv@divisor+2,f,c
   854  001416  2226               	addwfc	___aldiv@divisor+3,f,c
   855  001418  0E01               	movlw	1
   856  00141A  6E28               	movwf	___aldiv@sign,c
   857  00141C                     l348:
   858  00141C  AE22               	btfss	___aldiv@dividend+3,7,c
   859  00141E  D00A               	goto	l349
   860  001420  1E22               	comf	___aldiv@dividend+3,f,c
   861  001422  1E21               	comf	___aldiv@dividend+2,f,c
   862  001424  1E20               	comf	___aldiv@dividend+1,f,c
   863  001426  6C1F               	negf	___aldiv@dividend,c
   864  001428  0E00               	movlw	0
   865  00142A  2220               	addwfc	___aldiv@dividend+1,f,c
   866  00142C  2221               	addwfc	___aldiv@dividend+2,f,c
   867  00142E  2222               	addwfc	___aldiv@dividend+3,f,c
   868  001430  0E01               	movlw	1
   869  001432  1A28               	xorwf	___aldiv@sign,f,c
   870  001434                     l349:
   871  001434  0E00               	movlw	0
   872  001436  6E29               	movwf	___aldiv@quotient,c
   873  001438  0E00               	movlw	0
   874  00143A  6E2A               	movwf	___aldiv@quotient+1,c
   875  00143C  0E00               	movlw	0
   876  00143E  6E2B               	movwf	___aldiv@quotient+2,c
   877  001440  0E00               	movlw	0
   878  001442  6E2C               	movwf	___aldiv@quotient+3,c
   879  001444  5023               	movf	___aldiv@divisor,w,c
   880  001446  1024               	iorwf	___aldiv@divisor+1,w,c
   881  001448  1025               	iorwf	___aldiv@divisor+2,w,c
   882  00144A  1026               	iorwf	___aldiv@divisor+3,w,c
   883  00144C  B4D8               	btfsc	status,2,c
   884  00144E  D02A               	goto	l356
   885  001450  0E01               	movlw	1
   886  001452  6E27               	movwf	___aldiv@counter,c
   887  001454  D006               	goto	l351
   888  001456  90D8               	bcf	status,0,c
   889  001458  3623               	rlcf	___aldiv@divisor,f,c
   890  00145A  3624               	rlcf	___aldiv@divisor+1,f,c
   891  00145C  3625               	rlcf	___aldiv@divisor+2,f,c
   892  00145E  3626               	rlcf	___aldiv@divisor+3,f,c
   893  001460  2A27               	incf	___aldiv@counter,f,c
   894  001462                     l351:
   895  001462  AE26               	btfss	___aldiv@divisor+3,7,c
   896  001464  D7F8               	goto	l352
   897  001466                     u820:
   898  001466  90D8               	bcf	status,0,c
   899  001468  3629               	rlcf	___aldiv@quotient,f,c
   900  00146A  362A               	rlcf	___aldiv@quotient+1,f,c
   901  00146C  362B               	rlcf	___aldiv@quotient+2,f,c
   902  00146E  362C               	rlcf	___aldiv@quotient+3,f,c
   903  001470  5023               	movf	___aldiv@divisor,w,c
   904  001472  5C1F               	subwf	___aldiv@dividend,w,c
   905  001474  5024               	movf	___aldiv@divisor+1,w,c
   906  001476  5820               	subwfb	___aldiv@dividend+1,w,c
   907  001478  5025               	movf	___aldiv@divisor+2,w,c
   908  00147A  5821               	subwfb	___aldiv@dividend+2,w,c
   909  00147C  5026               	movf	___aldiv@divisor+3,w,c
   910  00147E  5822               	subwfb	___aldiv@dividend+3,w,c
   911  001480  A0D8               	btfss	status,0,c
   912  001482  D009               	goto	l355
   913  001484  5023               	movf	___aldiv@divisor,w,c
   914  001486  5E1F               	subwf	___aldiv@dividend,f,c
   915  001488  5024               	movf	___aldiv@divisor+1,w,c
   916  00148A  5A20               	subwfb	___aldiv@dividend+1,f,c
   917  00148C  5025               	movf	___aldiv@divisor+2,w,c
   918  00148E  5A21               	subwfb	___aldiv@dividend+2,f,c
   919  001490  5026               	movf	___aldiv@divisor+3,w,c
   920  001492  5A22               	subwfb	___aldiv@dividend+3,f,c
   921  001494  8029               	bsf	___aldiv@quotient,0,c
   922  001496                     l355:
   923  001496  90D8               	bcf	status,0,c
   924  001498  3226               	rrcf	___aldiv@divisor+3,f,c
   925  00149A  3225               	rrcf	___aldiv@divisor+2,f,c
   926  00149C  3224               	rrcf	___aldiv@divisor+1,f,c
   927  00149E  3223               	rrcf	___aldiv@divisor,f,c
   928  0014A0  2E27               	decfsz	___aldiv@counter,f,c
   929  0014A2  D7E1               	goto	u820
   930  0014A4                     l356:
   931  0014A4  5028               	movf	___aldiv@sign,w,c
   932  0014A6  B4D8               	btfsc	status,2,c
   933  0014A8  D008               	goto	l357
   934  0014AA  1E2C               	comf	___aldiv@quotient+3,f,c
   935  0014AC  1E2B               	comf	___aldiv@quotient+2,f,c
   936  0014AE  1E2A               	comf	___aldiv@quotient+1,f,c
   937  0014B0  6C29               	negf	___aldiv@quotient,c
   938  0014B2  0E00               	movlw	0
   939  0014B4  222A               	addwfc	___aldiv@quotient+1,f,c
   940  0014B6  222B               	addwfc	___aldiv@quotient+2,f,c
   941  0014B8  222C               	addwfc	___aldiv@quotient+3,f,c
   942  0014BA                     l357:
   943  0014BA  C029  F01F         	movff	___aldiv@quotient,?___aldiv
   944  0014BE  C02A  F020         	movff	___aldiv@quotient+1,?___aldiv+1
   945  0014C2  C02B  F021         	movff	___aldiv@quotient+2,?___aldiv+2
   946  0014C6  C02C  F022         	movff	___aldiv@quotient+3,?___aldiv+3
   947  0014CA  0012               	return	
   948  0014CC                     __end_of___aldiv:
   949                           	opt stack 0
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function ___fttol *****************
   955 ;; Defined at:
   956 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  f1              3   18[COMRAM] float 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  lval            4   28[COMRAM] unsigned long 
   961 ;;  exp1            1   32[COMRAM] unsigned char 
   962 ;;  sign1           1   27[COMRAM] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  4   18[COMRAM] long 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   972 ;;      Params:         4       0       0       0       0       0       0       0       0
   973 ;;      Locals:         6       0       0       0       0       0       0       0       0
   974 ;;      Temps:          5       0       0       0       0       0       0       0       0
   975 ;;      Totals:        15       0       0       0       0       0       0       0       0
   976 ;;Total ram usage:       15 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text4
   987  00114E                     __ptext4:
   988                           	opt stack 0
   989  00114E                     ___fttol:
   990                           	opt stack 29
   991                           
   992                           ;incstack = 0
   993  00114E  C015  F017         	movff	___fttol@f1+2,??___fttol
   994  001152  6A18               	clrf	(??___fttol+1)& (0+255),c
   995  001154  6A19               	clrf	(??___fttol+2)& (0+255),c
   996  001156  3414               	rlcf	___fttol@f1+1,w,c
   997  001158  3617               	rlcf	??___fttol& (0+255),f,c
   998  00115A  E301               	bnc	u951
   999  00115C  8018               	bsf	(??___fttol+1)& (0+255),0,c
  1000  00115E                     u951:
  1001  00115E  5017               	movf	??___fttol,w,c
  1002  001160  6E21               	movwf	___fttol@exp1,c
  1003  001162  5021               	movf	___fttol@exp1,w,c
  1004  001164  A4D8               	btfss	status,2,c
  1005  001166  D009               	goto	l607
  1006  001168  0E00               	movlw	0
  1007  00116A  6E13               	movwf	?___fttol,c
  1008  00116C  0E00               	movlw	0
  1009  00116E  6E14               	movwf	?___fttol+1,c
  1010  001170  0E00               	movlw	0
  1011  001172  6E15               	movwf	?___fttol+2,c
  1012  001174  0E00               	movlw	0
  1013  001176  6E16               	movwf	?___fttol+3,c
  1014  001178  0012               	return	
  1015  00117A                     l607:
  1016  00117A  0E17               	movlw	23
  1017  00117C  6E17               	movwf	??___fttol& (0+255),c
  1018  00117E  C013  F018         	movff	___fttol@f1,??___fttol+1
  1019  001182  C014  F019         	movff	___fttol@f1+1,??___fttol+2
  1020  001186  C015  F01A         	movff	___fttol@f1+2,??___fttol+3
  1021  00118A  2817               	incf	??___fttol,w,c
  1022  00118C  6E1B               	movwf	(??___fttol+4)& (0+255),c
  1023  00118E  D004               	goto	u970
  1024  001190                     u975:
  1025  001190  90D8               	bcf	status,0,c
  1026  001192  321A               	rrcf	??___fttol+3,f,c
  1027  001194  3219               	rrcf	??___fttol+2,f,c
  1028  001196  3218               	rrcf	??___fttol+1,f,c
  1029  001198                     u970:
  1030  001198  2E1B               	decfsz	(??___fttol+4)& (0+255),f,c
  1031  00119A  D7FA               	goto	u975
  1032  00119C  5018               	movf	??___fttol+1,w,c
  1033  00119E  6E1C               	movwf	___fttol@sign1,c
  1034  0011A0  8E14               	bsf	___fttol@f1+1,7,c
  1035  0011A2  0EFF               	movlw	255
  1036  0011A4  1613               	andwf	___fttol@f1,f,c
  1037  0011A6  0EFF               	movlw	255
  1038  0011A8  1614               	andwf	___fttol@f1+1,f,c
  1039  0011AA  0E00               	movlw	0
  1040  0011AC  1615               	andwf	___fttol@f1+2,f,c
  1041  0011AE  5013               	movf	___fttol@f1,w,c
  1042  0011B0  6E1D               	movwf	___fttol@lval,c
  1043  0011B2  5014               	movf	___fttol@f1+1,w,c
  1044  0011B4  6E1E               	movwf	___fttol@lval+1,c
  1045  0011B6  5015               	movf	___fttol@f1+2,w,c
  1046  0011B8  6E1F               	movwf	___fttol@lval+2,c
  1047  0011BA  6A20               	clrf	___fttol@lval+3,c
  1048  0011BC  0E8E               	movlw	142
  1049  0011BE  5E21               	subwf	___fttol@exp1,f,c
  1050  0011C0  AE21               	btfss	___fttol@exp1,7,c
  1051  0011C2  D016               	goto	l609
  1052  0011C4  5021               	movf	___fttol@exp1,w,c
  1053  0011C6  0A80               	xorlw	128
  1054  0011C8  0F8F               	addlw	143
  1055  0011CA  B0D8               	btfsc	status,0,c
  1056  0011CC  D009               	goto	l610
  1057  0011CE  0E00               	movlw	0
  1058  0011D0  6E13               	movwf	?___fttol,c
  1059  0011D2  0E00               	movlw	0
  1060  0011D4  6E14               	movwf	?___fttol+1,c
  1061  0011D6  0E00               	movlw	0
  1062  0011D8  6E15               	movwf	?___fttol+2,c
  1063  0011DA  0E00               	movlw	0
  1064  0011DC  6E16               	movwf	?___fttol+3,c
  1065  0011DE  0012               	return	
  1066  0011E0                     l610:
  1067  0011E0  90D8               	bcf	status,0,c
  1068  0011E2  3220               	rrcf	___fttol@lval+3,f,c
  1069  0011E4  321F               	rrcf	___fttol@lval+2,f,c
  1070  0011E6  321E               	rrcf	___fttol@lval+1,f,c
  1071  0011E8  321D               	rrcf	___fttol@lval,f,c
  1072  0011EA  3E21               	incfsz	___fttol@exp1,f,c
  1073  0011EC  D7F9               	goto	l610
  1074  0011EE  D015               	goto	u1010
  1075  0011F0                     l609:
  1076  0011F0  0E17               	movlw	23
  1077  0011F2  6421               	cpfsgt	___fttol@exp1,c
  1078  0011F4  D00F               	goto	l615
  1079  0011F6  0E00               	movlw	0
  1080  0011F8  6E13               	movwf	?___fttol,c
  1081  0011FA  0E00               	movlw	0
  1082  0011FC  6E14               	movwf	?___fttol+1,c
  1083  0011FE  0E00               	movlw	0
  1084  001200  6E15               	movwf	?___fttol+2,c
  1085  001202  0E00               	movlw	0
  1086  001204  6E16               	movwf	?___fttol+3,c
  1087  001206  0012               	return	
  1088  001208  90D8               	bcf	status,0,c
  1089  00120A  361D               	rlcf	___fttol@lval,f,c
  1090  00120C  361E               	rlcf	___fttol@lval+1,f,c
  1091  00120E  361F               	rlcf	___fttol@lval+2,f,c
  1092  001210  3620               	rlcf	___fttol@lval+3,f,c
  1093  001212  0621               	decf	___fttol@exp1,f,c
  1094  001214                     l615:
  1095  001214  5021               	movf	___fttol@exp1,w,c
  1096  001216  A4D8               	btfss	status,2,c
  1097  001218  D7F7               	goto	l616
  1098  00121A                     u1010:
  1099  00121A  501C               	movf	___fttol@sign1,w,c
  1100  00121C  B4D8               	btfsc	status,2,c
  1101  00121E  D008               	goto	l618
  1102  001220  1E20               	comf	___fttol@lval+3,f,c
  1103  001222  1E1F               	comf	___fttol@lval+2,f,c
  1104  001224  1E1E               	comf	___fttol@lval+1,f,c
  1105  001226  6C1D               	negf	___fttol@lval,c
  1106  001228  0E00               	movlw	0
  1107  00122A  221E               	addwfc	___fttol@lval+1,f,c
  1108  00122C  221F               	addwfc	___fttol@lval+2,f,c
  1109  00122E  2220               	addwfc	___fttol@lval+3,f,c
  1110  001230                     l618:
  1111  001230  C01D  F013         	movff	___fttol@lval,?___fttol
  1112  001234  C01E  F014         	movff	___fttol@lval+1,?___fttol+1
  1113  001238  C01F  F015         	movff	___fttol@lval+2,?___fttol+2
  1114  00123C  C020  F016         	movff	___fttol@lval+3,?___fttol+3
  1115  001240  0012               	return	
  1116  001242                     __end_of___fttol:
  1117                           	opt stack 0
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           status	equ	0xFD8
  1121                           
  1122 ;; *************** function ___altoft *****************
  1123 ;; Defined at:
  1124 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  c               4   20[BANK0 ] long 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  sign            1   57[COMRAM] unsigned char 
  1129 ;;  exp             1   56[COMRAM] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  3   20[BANK0 ] float 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         0       4       0       0       0       0       0       0       0
  1140 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1141 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1142 ;;      Totals:         2       8       0       0       0       0       0       0       0
  1143 ;;Total ram usage:       10 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    2
  1146 ;; This function calls:
  1147 ;;		___ftpack
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text5
  1154  0015FE                     __ptext5:
  1155                           	opt stack 0
  1156  0015FE                     ___altoft:
  1157                           	opt stack 28
  1158                           
  1159                           ;incstack = 0
  1160  0015FE  0E00               	movlw	0
  1161  001600  6E3A               	movwf	___altoft@sign,c
  1162  001602  0E8E               	movlw	142
  1163  001604  6E39               	movwf	___altoft@exp,c
  1164  001606  0100               	movlb	0	; () banked
  1165  001608  AF77               	btfss	(___altoft@c+3)& (0+255),7,b
  1166  00160A  D011               	goto	l377
  1167                           
  1168                           ; BSR set to: 0
  1169  00160C  1F77               	comf	(___altoft@c+3)& (0+255),f,b
  1170  00160E  1F76               	comf	(___altoft@c+2)& (0+255),f,b
  1171  001610  1F75               	comf	(___altoft@c+1)& (0+255),f,b
  1172  001612  6D74               	negf	___altoft@c& (0+255),b
  1173  001614  0E00               	movlw	0
  1174  001616  2375               	addwfc	(___altoft@c+1)& (0+255),f,b
  1175  001618  2376               	addwfc	(___altoft@c+2)& (0+255),f,b
  1176  00161A  2377               	addwfc	(___altoft@c+3)& (0+255),f,b
  1177                           
  1178                           ; BSR set to: 0
  1179  00161C  0E01               	movlw	1
  1180  00161E  6E3A               	movwf	___altoft@sign,c
  1181                           
  1182                           ; BSR set to: 0
  1183  001620  D006               	goto	l377
  1184  001622                     
  1185                           ; BSR set to: 0
  1186                           
  1187                           ; BSR set to: 0
  1188  001622  90D8               	bcf	status,0,c
  1189  001624  3377               	rrcf	(___altoft@c+3)& (0+255),f,b
  1190  001626  3376               	rrcf	(___altoft@c+2)& (0+255),f,b
  1191  001628  3375               	rrcf	(___altoft@c+1)& (0+255),f,b
  1192  00162A  3374               	rrcf	___altoft@c& (0+255),f,b
  1193  00162C  2A39               	incf	___altoft@exp,f,c
  1194  00162E                     l377:
  1195                           
  1196                           ; BSR set to: 0
  1197                           
  1198                           ; BSR set to: 0
  1199  00162E  0E00               	movlw	0
  1200  001630  1574               	andwf	___altoft@c& (0+255),w,b
  1201  001632  6F78               	movwf	??___altoft& (0+255),b
  1202  001634  0E00               	movlw	0
  1203  001636  1575               	andwf	(___altoft@c+1)& (0+255),w,b
  1204  001638  6F79               	movwf	(??___altoft+1)& (0+255),b
  1205  00163A  0E00               	movlw	0
  1206  00163C  1576               	andwf	(___altoft@c+2)& (0+255),w,b
  1207  00163E  6F7A               	movwf	(??___altoft+2)& (0+255),b
  1208  001640  0EFF               	movlw	255
  1209  001642  1577               	andwf	(___altoft@c+3)& (0+255),w,b
  1210  001644  6F7B               	movwf	(??___altoft+3)& (0+255),b
  1211  001646  5178               	movf	??___altoft& (0+255),w,b
  1212  001648  1179               	iorwf	(??___altoft+1)& (0+255),w,b
  1213  00164A  117A               	iorwf	(??___altoft+2)& (0+255),w,b
  1214  00164C  117B               	iorwf	(??___altoft+3)& (0+255),w,b
  1215  00164E  A4D8               	btfss	status,2,c
  1216  001650  D7E8               	goto	l378
  1217                           
  1218                           ; BSR set to: 0
  1219                           
  1220                           ; BSR set to: 0
  1221  001652  C074  F013         	movff	___altoft@c,___ftpack@arg
  1222  001656  C075  F014         	movff	___altoft@c+1,___ftpack@arg+1
  1223  00165A  C076  F015         	movff	___altoft@c+2,___ftpack@arg+2
  1224  00165E  C039  F016         	movff	___altoft@exp,___ftpack@exp
  1225  001662  C03A  F017         	movff	___altoft@sign,___ftpack@sign
  1226  001666  EC66  F00A         	call	___ftpack	;wreg free
  1227  00166A  C013  F074         	movff	?___ftpack,?___altoft
  1228  00166E  C014  F075         	movff	?___ftpack+1,?___altoft+1
  1229  001672  C015  F076         	movff	?___ftpack+2,?___altoft+2
  1230  001676  0012               	return	
  1231  001678                     __end_of___altoft:
  1232                           	opt stack 0
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           status	equ	0xFD8
  1236                           
  1237 ;; *************** function ___ftpack *****************
  1238 ;; Defined at:
  1239 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  arg             3   18[COMRAM] unsigned um
  1242 ;;  exp             1   21[COMRAM] unsigned char 
  1243 ;;  sign            1   22[COMRAM] unsigned char 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  3   18[COMRAM] float 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1255 ;;      Params:         5       0       0       0       0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1257 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1258 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1259 ;;Total ram usage:        8 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		___altoft
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text6
  1270  0014CC                     __ptext6:
  1271                           	opt stack 0
  1272  0014CC                     ___ftpack:
  1273                           	opt stack 28
  1274                           
  1275                           ;incstack = 0
  1276  0014CC  5016               	movf	___ftpack@exp,w,c
  1277  0014CE  B4D8               	btfsc	status,2,c
  1278  0014D0  D005               	goto	u1070
  1279  0014D2  5013               	movf	___ftpack@arg,w,c
  1280  0014D4  1014               	iorwf	___ftpack@arg+1,w,c
  1281  0014D6  1015               	iorwf	___ftpack@arg+2,w,c
  1282  0014D8  A4D8               	btfss	status,2,c
  1283  0014DA  D00C               	goto	l507
  1284  0014DC                     u1070:
  1285  0014DC  0E00               	movlw	0
  1286  0014DE  6E13               	movwf	?___ftpack,c
  1287  0014E0  0E00               	movlw	0
  1288  0014E2  6E14               	movwf	?___ftpack+1,c
  1289  0014E4  0E00               	movlw	0
  1290  0014E6  6E15               	movwf	?___ftpack+2,c
  1291  0014E8  0012               	return	
  1292  0014EA  2A16               	incf	___ftpack@exp,f,c
  1293  0014EC  90D8               	bcf	status,0,c
  1294  0014EE  3215               	rrcf	___ftpack@arg+2,f,c
  1295  0014F0  3214               	rrcf	___ftpack@arg+1,f,c
  1296  0014F2  3213               	rrcf	___ftpack@arg,f,c
  1297  0014F4                     l507:
  1298  0014F4  0E00               	movlw	0
  1299  0014F6  1413               	andwf	___ftpack@arg,w,c
  1300  0014F8  6E18               	movwf	??___ftpack& (0+255),c
  1301  0014FA  0E00               	movlw	0
  1302  0014FC  1414               	andwf	___ftpack@arg+1,w,c
  1303  0014FE  6E19               	movwf	(??___ftpack+1)& (0+255),c
  1304  001500  0EFE               	movlw	254
  1305  001502  1415               	andwf	___ftpack@arg+2,w,c
  1306  001504  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  1307  001506  5018               	movf	??___ftpack,w,c
  1308  001508  1019               	iorwf	??___ftpack+1,w,c
  1309  00150A  101A               	iorwf	??___ftpack+2,w,c
  1310  00150C  B4D8               	btfsc	status,2,c
  1311  00150E  D00C               	goto	l510
  1312  001510  D7EC               	goto	l508
  1313  001512  2A16               	incf	___ftpack@exp,f,c
  1314  001514  0E01               	movlw	1
  1315  001516  2613               	addwf	___ftpack@arg,f,c
  1316  001518  0E00               	movlw	0
  1317  00151A  2214               	addwfc	___ftpack@arg+1,f,c
  1318  00151C  0E00               	movlw	0
  1319  00151E  2215               	addwfc	___ftpack@arg+2,f,c
  1320  001520  90D8               	bcf	status,0,c
  1321  001522  3215               	rrcf	___ftpack@arg+2,f,c
  1322  001524  3214               	rrcf	___ftpack@arg+1,f,c
  1323  001526  3213               	rrcf	___ftpack@arg,f,c
  1324  001528                     l510:
  1325  001528  0E00               	movlw	0
  1326  00152A  1413               	andwf	___ftpack@arg,w,c
  1327  00152C  6E18               	movwf	??___ftpack& (0+255),c
  1328  00152E  0E00               	movlw	0
  1329  001530  1414               	andwf	___ftpack@arg+1,w,c
  1330  001532  6E19               	movwf	(??___ftpack+1)& (0+255),c
  1331  001534  0EFF               	movlw	255
  1332  001536  1415               	andwf	___ftpack@arg+2,w,c
  1333  001538  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  1334  00153A  5018               	movf	??___ftpack,w,c
  1335  00153C  1019               	iorwf	??___ftpack+1,w,c
  1336  00153E  101A               	iorwf	??___ftpack+2,w,c
  1337  001540  B4D8               	btfsc	status,2,c
  1338  001542  D006               	goto	l513
  1339  001544  D7E6               	goto	l511
  1340  001546  0616               	decf	___ftpack@exp,f,c
  1341  001548  90D8               	bcf	status,0,c
  1342  00154A  3613               	rlcf	___ftpack@arg,f,c
  1343  00154C  3614               	rlcf	___ftpack@arg+1,f,c
  1344  00154E  3615               	rlcf	___ftpack@arg+2,f,c
  1345  001550                     l513:
  1346  001550  BE14               	btfsc	___ftpack@arg+1,7,c
  1347  001552  D003               	goto	u1110
  1348  001554  0E02               	movlw	2
  1349  001556  6016               	cpfslt	___ftpack@exp,c
  1350  001558  D7F6               	goto	l514
  1351  00155A                     u1110:
  1352  00155A  A016               	btfss	___ftpack@exp,0,c
  1353  00155C  9E14               	bcf	___ftpack@arg+1,7,c
  1354  00155E  90D8               	bcf	status,0,c
  1355  001560  3216               	rrcf	___ftpack@exp,f,c
  1356  001562  5016               	movf	___ftpack@exp,w,c
  1357  001564  1215               	iorwf	___ftpack@arg+2,f,c
  1358  001566  5017               	movf	___ftpack@sign,w,c
  1359  001568  A4D8               	btfss	status,2,c
  1360  00156A  8E15               	bsf	___ftpack@arg+2,7,c
  1361  00156C  C013  F013         	movff	___ftpack@arg,?___ftpack
  1362  001570  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  1363  001574  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  1364  001578  0012               	return	
  1365  00157A                     __end_of___ftpack:
  1366                           	opt stack 0
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           status	equ	0xFD8
  1370                           
  1371 ;; *************** function _Servo_Init *****************
  1372 ;; Defined at:
  1373 ;;		line 14 in file "servo.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1387 ;;      Params:         0       0       0       0       0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1390 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text7
  1402  0017D8                     __ptext7:
  1403                           	opt stack 0
  1404  0017D8                     _Servo_Init:
  1405                           	opt stack 29
  1406                           
  1407                           ;servo.c: 17: TRISBbits.RB7 = 0;
  1408                           
  1409                           ;incstack = 0
  1410  0017D8  9E93               	bcf	3987,7,c	;volatile
  1411                           
  1412                           ;servo.c: 18: LATBbits.LB7 = 0;
  1413  0017DA  9E8A               	bcf	3978,7,c	;volatile
  1414                           
  1415                           ;servo.c: 56: INTCONbits.GIE = 1;
  1416  0017DC  8EF2               	bsf	intcon,7,c	;volatile
  1417                           
  1418                           ;servo.c: 57: INTCONbits.TMR0IE = 1;
  1419  0017DE  8AF2               	bsf	intcon,5,c	;volatile
  1420                           
  1421                           ;servo.c: 58: INTCONbits.TMR0IF = 0;
  1422  0017E0  94F2               	bcf	intcon,2,c	;volatile
  1423                           
  1424                           ;servo.c: 59: T0CON = 0x50;
  1425  0017E2  0E50               	movlw	80
  1426  0017E4  6ED5               	movwf	4053,c	;volatile
  1427                           
  1428                           ;servo.c: 60: T0CONbits.TMR0ON = 1;
  1429  0017E6  8ED5               	bsf	4053,7,c	;volatile
  1430                           
  1431                           ;servo.c: 61: TMR0 = 50;
  1432  0017E8  0E00               	movlw	0
  1433  0017EA  6ED7               	movwf	4055,c	;volatile
  1434  0017EC  0E32               	movlw	50
  1435  0017EE  6ED6               	movwf	4054,c	;volatile
  1436  0017F0  0012               	return		;funcret
  1437  0017F2                     __end_of_Servo_Init:
  1438                           	opt stack 0
  1439                           intcon	equ	0xFF2
  1440                           postinc0	equ	0xFEE
  1441                           wreg	equ	0xFE8
  1442                           status	equ	0xFD8
  1443                           
  1444 ;; *************** function _Servo_1_Write *****************
  1445 ;; Defined at:
  1446 ;;		line 65 in file "servo.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  ang             1    wreg     unsigned char 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  ang             1   26[COMRAM] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0
  1461 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1463 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1464 ;;Total ram usage:        1 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    2
  1467 ;; This function calls:
  1468 ;;		___awdiv
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text8
  1475  001754                     __ptext8:
  1476                           	opt stack 0
  1477  001754                     _Servo_1_Write:
  1478                           	opt stack 28
  1479                           
  1480                           ;incstack = 0
  1481                           ;Servo_1_Write@ang stored from wreg
  1482  001754  6E1B               	movwf	Servo_1_Write@ang,c
  1483                           
  1484                           ;servo.c: 67: data_s[0] = (ang-0)*(60-14)/(180-0)+14;
  1485  001756  501B               	movf	Servo_1_Write@ang,w,c
  1486  001758  0D2E               	mullw	46
  1487  00175A  CFF3 F013          	movff	prodl,___awdiv@dividend
  1488  00175E  CFF4 F014          	movff	prodh,___awdiv@dividend+1
  1489  001762  0E00               	movlw	0
  1490  001764  6E16               	movwf	___awdiv@divisor+1,c
  1491  001766  0EB4               	movlw	180
  1492  001768  6E15               	movwf	___awdiv@divisor,c
  1493  00176A  ECBD  F00A         	call	___awdiv	;wreg free
  1494  00176E  5013               	movf	?___awdiv,w,c
  1495  001770  0F0E               	addlw	14
  1496  001772  0100               	movlb	0	; () banked
  1497  001774  6F88               	movwf	_data_s& (0+255),b
  1498                           
  1499                           ; BSR set to: 0
  1500  001776  0012               	return		;funcret
  1501  001778                     __end_of_Servo_1_Write:
  1502                           	opt stack 0
  1503                           prodh	equ	0xFF4
  1504                           prodl	equ	0xFF3
  1505                           intcon	equ	0xFF2
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function ___awdiv *****************
  1511 ;; Defined at:
  1512 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  dividend        2   18[COMRAM] int 
  1515 ;;  divisor         2   20[COMRAM] int 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  quotient        2   24[COMRAM] int 
  1518 ;;  sign            1   23[COMRAM] unsigned char 
  1519 ;;  counter         1   22[COMRAM] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2   18[COMRAM] int 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1529 ;;      Params:         4       0       0       0       0       0       0       0       0
  1530 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1532 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1533 ;;Total ram usage:        8 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_Servo_1_Write
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text9
  1544  00157A                     __ptext9:
  1545                           	opt stack 0
  1546  00157A                     ___awdiv:
  1547                           	opt stack 28
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;incstack = 0
  1551  00157A  0E00               	movlw	0
  1552  00157C  6E18               	movwf	___awdiv@sign,c
  1553  00157E  AE16               	btfss	___awdiv@divisor+1,7,c
  1554  001580  D006               	goto	l460
  1555  001582  6C15               	negf	___awdiv@divisor,c
  1556  001584  1E16               	comf	___awdiv@divisor+1,f,c
  1557  001586  B0D8               	btfsc	status,0,c
  1558  001588  2A16               	incf	___awdiv@divisor+1,f,c
  1559  00158A  0E01               	movlw	1
  1560  00158C  6E18               	movwf	___awdiv@sign,c
  1561  00158E                     l460:
  1562  00158E  AE14               	btfss	___awdiv@dividend+1,7,c
  1563  001590  D006               	goto	l461
  1564  001592  6C13               	negf	___awdiv@dividend,c
  1565  001594  1E14               	comf	___awdiv@dividend+1,f,c
  1566  001596  B0D8               	btfsc	status,0,c
  1567  001598  2A14               	incf	___awdiv@dividend+1,f,c
  1568  00159A  0E01               	movlw	1
  1569  00159C  1A18               	xorwf	___awdiv@sign,f,c
  1570  00159E                     l461:
  1571  00159E  0E00               	movlw	0
  1572  0015A0  6E1A               	movwf	___awdiv@quotient+1,c
  1573  0015A2  0E00               	movlw	0
  1574  0015A4  6E19               	movwf	___awdiv@quotient,c
  1575  0015A6  5015               	movf	___awdiv@divisor,w,c
  1576  0015A8  1016               	iorwf	___awdiv@divisor+1,w,c
  1577  0015AA  B4D8               	btfsc	status,2,c
  1578  0015AC  D01C               	goto	l468
  1579  0015AE  0E01               	movlw	1
  1580  0015B0  6E17               	movwf	___awdiv@counter,c
  1581  0015B2  D004               	goto	l463
  1582  0015B4  90D8               	bcf	status,0,c
  1583  0015B6  3615               	rlcf	___awdiv@divisor,f,c
  1584  0015B8  3616               	rlcf	___awdiv@divisor+1,f,c
  1585  0015BA  2A17               	incf	___awdiv@counter,f,c
  1586  0015BC                     l463:
  1587  0015BC  AE16               	btfss	___awdiv@divisor+1,7,c
  1588  0015BE  D7FA               	goto	l464
  1589  0015C0                     u880:
  1590  0015C0  90D8               	bcf	status,0,c
  1591  0015C2  3619               	rlcf	___awdiv@quotient,f,c
  1592  0015C4  361A               	rlcf	___awdiv@quotient+1,f,c
  1593  0015C6  5015               	movf	___awdiv@divisor,w,c
  1594  0015C8  5C13               	subwf	___awdiv@dividend,w,c
  1595  0015CA  5016               	movf	___awdiv@divisor+1,w,c
  1596  0015CC  5814               	subwfb	___awdiv@dividend+1,w,c
  1597  0015CE  A0D8               	btfss	status,0,c
  1598  0015D0  D005               	goto	l467
  1599  0015D2  5015               	movf	___awdiv@divisor,w,c
  1600  0015D4  5E13               	subwf	___awdiv@dividend,f,c
  1601  0015D6  5016               	movf	___awdiv@divisor+1,w,c
  1602  0015D8  5A14               	subwfb	___awdiv@dividend+1,f,c
  1603  0015DA  8019               	bsf	___awdiv@quotient,0,c
  1604  0015DC                     l467:
  1605  0015DC  90D8               	bcf	status,0,c
  1606  0015DE  3216               	rrcf	___awdiv@divisor+1,f,c
  1607  0015E0  3215               	rrcf	___awdiv@divisor,f,c
  1608  0015E2  2E17               	decfsz	___awdiv@counter,f,c
  1609  0015E4  D7ED               	goto	u880
  1610  0015E6                     l468:
  1611  0015E6  5018               	movf	___awdiv@sign,w,c
  1612  0015E8  B4D8               	btfsc	status,2,c
  1613  0015EA  D004               	goto	l469
  1614  0015EC  6C19               	negf	___awdiv@quotient,c
  1615  0015EE  1E1A               	comf	___awdiv@quotient+1,f,c
  1616  0015F0  B0D8               	btfsc	status,0,c
  1617  0015F2  2A1A               	incf	___awdiv@quotient+1,f,c
  1618  0015F4                     l469:
  1619  0015F4  C019  F013         	movff	___awdiv@quotient,?___awdiv
  1620  0015F8  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  1621  0015FC  0012               	return	
  1622  0015FE                     __end_of___awdiv:
  1623                           	opt stack 0
  1624                           prodh	equ	0xFF4
  1625                           prodl	equ	0xFF3
  1626                           intcon	equ	0xFF2
  1627                           postinc0	equ	0xFEE
  1628                           wreg	equ	0xFE8
  1629                           status	equ	0xFD8
  1630                           
  1631 ;; *************** function _MPU6050_Init *****************
  1632 ;; Defined at:
  1633 ;;		line 20 in file "mpu6050.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1647 ;;      Params:         0       0       0       0       0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1649 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1650 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1651 ;;Total ram usage:        1 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    3
  1654 ;; This function calls:
  1655 ;;		_MPU6050_Write
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text10
  1662  001678                     __ptext10:
  1663                           	opt stack 0
  1664  001678                     _MPU6050_Init:
  1665                           	opt stack 27
  1666                           
  1667                           ;mpu6050.c: 22: MPU6050_Write(0x6B, 0x80);
  1668                           
  1669                           ;incstack = 0
  1670  001678  0E80               	movlw	128
  1671  00167A  6E17               	movwf	MPU6050_Write@data,c
  1672  00167C  0E6B               	movlw	107
  1673  00167E  ECDD  F00B         	call	_MPU6050_Write
  1674                           
  1675                           ;mpu6050.c: 23: _delay((unsigned long)((10)*(48000000/4000.0)));
  1676  001682  0E9C               	movlw	156
  1677  001684  6E19               	movwf	??_MPU6050_Init& (0+255),c
  1678  001686  0ED7               	movlw	215
  1679  001688                     u1217:
  1680  001688  2EE8               	decfsz	wreg,f,c
  1681  00168A  D7FE               	bra	u1217
  1682  00168C  2E19               	decfsz	??_MPU6050_Init& (0+255),f,c
  1683  00168E  D7FC               	bra	u1217
  1684  001690  F000               	nop	
  1685                           
  1686                           ;mpu6050.c: 24: MPU6050_Write(0x6B, 0x00);
  1687  001692  0E00               	movlw	0
  1688  001694  6E17               	movwf	MPU6050_Write@data,c
  1689  001696  0E6B               	movlw	107
  1690  001698  ECDD  F00B         	call	_MPU6050_Write
  1691                           
  1692                           ;mpu6050.c: 25: _delay((unsigned long)((10)*(48000000/4000.0)));
  1693  00169C  0E9C               	movlw	156
  1694  00169E  6E19               	movwf	??_MPU6050_Init& (0+255),c
  1695  0016A0  0ED7               	movlw	215
  1696  0016A2                     u1227:
  1697  0016A2  2EE8               	decfsz	wreg,f,c
  1698  0016A4  D7FE               	bra	u1227
  1699  0016A6  2E19               	decfsz	??_MPU6050_Init& (0+255),f,c
  1700  0016A8  D7FC               	bra	u1227
  1701  0016AA  F000               	nop	
  1702                           
  1703                           ;mpu6050.c: 26: MPU6050_Write(0x1A, 0x01);
  1704  0016AC  0E01               	movlw	1
  1705  0016AE  6E17               	movwf	MPU6050_Write@data,c
  1706  0016B0  0E1A               	movlw	26
  1707  0016B2  ECDD  F00B         	call	_MPU6050_Write
  1708                           
  1709                           ;mpu6050.c: 27: _delay((unsigned long)((10)*(48000000/4000.0)));
  1710  0016B6  0E9C               	movlw	156
  1711  0016B8  6E19               	movwf	??_MPU6050_Init& (0+255),c
  1712  0016BA  0ED7               	movlw	215
  1713  0016BC                     u1237:
  1714  0016BC  2EE8               	decfsz	wreg,f,c
  1715  0016BE  D7FE               	bra	u1237
  1716  0016C0  2E19               	decfsz	??_MPU6050_Init& (0+255),f,c
  1717  0016C2  D7FC               	bra	u1237
  1718  0016C4  F000               	nop	
  1719                           
  1720                           ;mpu6050.c: 28: MPU6050_Write(0x1B, 0x00);
  1721  0016C6  0E00               	movlw	0
  1722  0016C8  6E17               	movwf	MPU6050_Write@data,c
  1723  0016CA  0E1B               	movlw	27
  1724  0016CC  ECDD  F00B         	call	_MPU6050_Write
  1725  0016D0  0012               	return		;funcret
  1726  0016D2                     __end_of_MPU6050_Init:
  1727                           	opt stack 0
  1728                           prodh	equ	0xFF4
  1729                           prodl	equ	0xFF3
  1730                           intcon	equ	0xFF2
  1731                           postinc0	equ	0xFEE
  1732                           wreg	equ	0xFE8
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function _MPU6050_Write *****************
  1736 ;; Defined at:
  1737 ;;		line 11 in file "mpu6050.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  add             1    wreg     unsigned char 
  1740 ;;  data            1   22[COMRAM] unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  add             1   23[COMRAM] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1752 ;;      Params:         1       0       0       0       0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1755 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    2
  1759 ;; This function calls:
  1760 ;;		_I2C_Start
  1761 ;;		_I2C_Stop
  1762 ;;		_I2C_Write
  1763 ;; This function is called by:
  1764 ;;		_MPU6050_Init
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text11
  1769  0017BA                     __ptext11:
  1770                           	opt stack 0
  1771  0017BA                     _MPU6050_Write:
  1772                           	opt stack 27
  1773                           
  1774                           ;incstack = 0
  1775                           ;MPU6050_Write@add stored from wreg
  1776  0017BA  6E18               	movwf	MPU6050_Write@add,c
  1777                           
  1778                           ;mpu6050.c: 13: I2C_Start();
  1779  0017BC  ECFE  F00B         	call	_I2C_Start	;wreg free
  1780                           
  1781                           ;mpu6050.c: 14: I2C_Write(0xD0);
  1782  0017C0  0ED0               	movlw	208
  1783  0017C2  ECCD  F00B         	call	_I2C_Write
  1784                           
  1785                           ;mpu6050.c: 15: I2C_Write(add);
  1786  0017C6  5018               	movf	MPU6050_Write@add,w,c
  1787  0017C8  ECCD  F00B         	call	_I2C_Write
  1788                           
  1789                           ;mpu6050.c: 16: I2C_Write(data);
  1790  0017CC  5017               	movf	MPU6050_Write@data,w,c
  1791  0017CE  ECCD  F00B         	call	_I2C_Write
  1792                           
  1793                           ;mpu6050.c: 17: I2C_Stop();
  1794  0017D2  ECF9  F00B         	call	_I2C_Stop	;wreg free
  1795  0017D6  0012               	return		;funcret
  1796  0017D8                     __end_of_MPU6050_Write:
  1797                           	opt stack 0
  1798                           prodh	equ	0xFF4
  1799                           prodl	equ	0xFF3
  1800                           intcon	equ	0xFF2
  1801                           postinc0	equ	0xFEE
  1802                           wreg	equ	0xFE8
  1803                           status	equ	0xFD8
  1804                           
  1805 ;; *************** function _I2C_Write *****************
  1806 ;; Defined at:
  1807 ;;		line 64 in file "i2c.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  data            1    wreg     unsigned char 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  data            1   21[COMRAM] unsigned char 
  1812 ;;  b_ok            2   19[COMRAM] short 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  2  126[None  ] short 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0
  1823 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1824 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1825 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1826 ;;Total ram usage:        4 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_MPU6050_Write
  1833 ;;		_MPU6050_Read
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text12
  1838  00179A                     __ptext12:
  1839                           	opt stack 0
  1840  00179A                     _I2C_Write:
  1841                           	opt stack 27
  1842                           
  1843                           ;incstack = 0
  1844                           ;I2C_Write@data stored from wreg
  1845  00179A  6E16               	movwf	I2C_Write@data,c
  1846                           
  1847                           ;i2c.c: 66: SSPBUF = data;
  1848  00179C  C016  FFC9         	movff	I2C_Write@data,4041	;volatile
  1849  0017A0  A69E               	btfss	3998,3,c	;volatile
  1850  0017A2  D7FE               	goto	l128
  1851                           
  1852                           ;i2c.c: 68: PIR1bits.SSPIF = 0;
  1853  0017A4  969E               	bcf	3998,3,c	;volatile
  1854                           
  1855                           ;i2c.c: 69: short b_ok = SSPCON2bits.ACKSTAT;
  1856  0017A6  ACC5               	btfss	4037,6,c	;volatile
  1857  0017A8  D003               	goto	u680
  1858  0017AA  6A13               	clrf	??_I2C_Write& (0+255),c
  1859  0017AC  2A13               	incf	??_I2C_Write& (0+255),f,c
  1860  0017AE  D001               	goto	u688
  1861  0017B0                     u680:
  1862  0017B0  6A13               	clrf	??_I2C_Write& (0+255),c
  1863  0017B2                     u688:
  1864  0017B2  5013               	movf	??_I2C_Write,w,c
  1865  0017B4  6E14               	movwf	I2C_Write@b_ok,c
  1866  0017B6  6A15               	clrf	I2C_Write@b_ok+1,c
  1867  0017B8  0012               	return	
  1868  0017BA                     __end_of_I2C_Write:
  1869                           	opt stack 0
  1870                           prodh	equ	0xFF4
  1871                           prodl	equ	0xFF3
  1872                           intcon	equ	0xFF2
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           status	equ	0xFD8
  1876                           
  1877 ;; *************** function _I2C_Stop *****************
  1878 ;; Defined at:
  1879 ;;		line 34 in file "i2c.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		None
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_MPU6050_Write
  1904 ;;		_MPU6050_Read
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text13
  1909  0017F2                     __ptext13:
  1910                           	opt stack 0
  1911  0017F2                     _I2C_Stop:
  1912                           	opt stack 27
  1913                           
  1914                           ;i2c.c: 36: SSPCON2bits.PEN = 1;
  1915                           
  1916                           ;incstack = 0
  1917  0017F2  84C5               	bsf	4037,2,c	;volatile
  1918  0017F4  A69E               	btfss	3998,3,c	;volatile
  1919  0017F6  D7FE               	goto	l104
  1920                           
  1921                           ;i2c.c: 38: PIR1bits.SSPIF = 0;
  1922  0017F8  969E               	bcf	3998,3,c	;volatile
  1923  0017FA  0012               	return		;funcret
  1924  0017FC                     __end_of_I2C_Stop:
  1925                           	opt stack 0
  1926                           prodh	equ	0xFF4
  1927                           prodl	equ	0xFF3
  1928                           intcon	equ	0xFF2
  1929                           postinc0	equ	0xFEE
  1930                           wreg	equ	0xFE8
  1931                           status	equ	0xFD8
  1932                           
  1933 ;; *************** function _I2C_Start *****************
  1934 ;; Defined at:
  1935 ;;		line 27 in file "i2c.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		None
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1949 ;;      Params:         0       0       0       0       0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1952 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    1
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_MPU6050_Write
  1960 ;;		_MPU6050_Read
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text14
  1965  0017FC                     __ptext14:
  1966                           	opt stack 0
  1967  0017FC                     _I2C_Start:
  1968                           	opt stack 27
  1969                           
  1970                           ;i2c.c: 29: SSPCON2bits.SEN = 1;
  1971                           
  1972                           ;incstack = 0
  1973  0017FC  80C5               	bsf	4037,0,c	;volatile
  1974  0017FE  A69E               	btfss	3998,3,c	;volatile
  1975  001800  D7FE               	goto	l98
  1976                           
  1977                           ;i2c.c: 31: PIR1bits.SSPIF = 0;
  1978  001802  969E               	bcf	3998,3,c	;volatile
  1979  001804  0012               	return		;funcret
  1980  001806                     __end_of_I2C_Start:
  1981                           	opt stack 0
  1982                           prodh	equ	0xFF4
  1983                           prodl	equ	0xFF3
  1984                           intcon	equ	0xFF2
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           status	equ	0xFD8
  1988                           
  1989 ;; *************** function _I2C_Init_Master *****************
  1990 ;; Defined at:
  1991 ;;		line 12 in file "i2c.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  sp_i2c          1    wreg     unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  sp_i2c          1   18[COMRAM] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2005 ;;      Params:         0       0       0       0       0       0       0       0       0
  2006 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2008 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2009 ;;Total ram usage:        1 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    1
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_main
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text15
  2020  001728                     __ptext15:
  2021                           	opt stack 0
  2022  001728                     _I2C_Init_Master:
  2023                           	opt stack 29
  2024                           
  2025                           ;incstack = 0
  2026                           ;I2C_Init_Master@sp_i2c stored from wreg
  2027  001728  6E13               	movwf	I2C_Init_Master@sp_i2c,c
  2028                           
  2029                           ;i2c.c: 14: TRISBbits.TRISB1 = 1;
  2030  00172A  8293               	bsf	3987,1,c	;volatile
  2031                           
  2032                           ;i2c.c: 15: TRISBbits.TRISB0 = 1;
  2033  00172C  8093               	bsf	3987,0,c	;volatile
  2034                           
  2035                           ;i2c.c: 16: SSPSTAT = sp_i2c;
  2036  00172E  C013  FFC7         	movff	I2C_Init_Master@sp_i2c,4039	;volatile
  2037                           
  2038                           ;i2c.c: 17: SSPCON1 = 0x28;
  2039  001732  0E28               	movlw	40
  2040  001734  6EC6               	movwf	4038,c	;volatile
  2041                           
  2042                           ;i2c.c: 18: SSPCON2 = 0x00;
  2043  001736  0E00               	movlw	0
  2044  001738  6EC5               	movwf	4037,c	;volatile
  2045                           
  2046                           ;i2c.c: 19: if(sp_i2c == 0x80){
  2047  00173A  0E80               	movlw	128
  2048  00173C  1813               	xorwf	I2C_Init_Master@sp_i2c,w,c
  2049  00173E  A4D8               	btfss	status,2,c
  2050  001740  D003               	goto	l91
  2051                           
  2052                           ;i2c.c: 20: SSPADD = 119;
  2053  001742  0E77               	movlw	119
  2054  001744  6EC8               	movwf	4040,c	;volatile
  2055                           
  2056                           ;i2c.c: 21: }
  2057  001746  0012               	return	
  2058  001748                     l91:
  2059                           
  2060                           ;i2c.c: 22: else if(sp_i2c == 0x00){
  2061  001748  5013               	movf	I2C_Init_Master@sp_i2c,w,c
  2062  00174A  A4D8               	btfss	status,2,c
  2063  00174C  0012               	return	
  2064                           
  2065                           ;i2c.c: 23: SSPADD = 29;
  2066  00174E  0E1D               	movlw	29
  2067  001750  6EC8               	movwf	4040,c	;volatile
  2068  001752  0012               	return	
  2069  001754                     __end_of_I2C_Init_Master:
  2070                           	opt stack 0
  2071                           prodh	equ	0xFF4
  2072                           prodl	equ	0xFF3
  2073                           intcon	equ	0xFF2
  2074                           postinc0	equ	0xFEE
  2075                           wreg	equ	0xFE8
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function _TMR0_ISR *****************
  2079 ;; Defined at:
  2080 ;;		line 121 in file "servo.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2096 ;;      Temps:         18       0       0       0       0       0       0       0       0
  2097 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2098 ;;Total ram usage:       18 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		Interrupt level 2
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	intcode
  2108  001008                     __pintcode:
  2109                           	opt stack 0
  2110  001008                     _TMR0_ISR:
  2111                           	opt stack 27
  2112                           
  2113                           ;incstack = 0
  2114  001008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2115  00100A  ED94  F009         	call	int_func,f	;refresh shadow registers
  2116                           prodh	equ	0xFF4
  2117                           prodl	equ	0xFF3
  2118                           intcon	equ	0xFF2
  2119                           postinc0	equ	0xFEE
  2120                           wreg	equ	0xFE8
  2121                           status	equ	0xFD8
  2122                           
  2123                           	psect	intcode_body
  2124  001328                     __pintcode_body:
  2125                           	opt stack 27
  2126  001328                     int_func:
  2127                           	opt stack 27
  2128  001328  0006               	pop		; remove dummy address from shadow register refresh
  2129  00132A  CFFA F001          	movff	pclath,??_TMR0_ISR
  2130  00132E  CFFB F002          	movff	pclatu,??_TMR0_ISR+1
  2131  001332  CFE9 F003          	movff	fsr0l,??_TMR0_ISR+2
  2132  001336  CFEA F004          	movff	fsr0h,??_TMR0_ISR+3
  2133  00133A  CFE1 F005          	movff	fsr1l,??_TMR0_ISR+4
  2134  00133E  CFE2 F006          	movff	fsr1h,??_TMR0_ISR+5
  2135  001342  CFD9 F007          	movff	fsr2l,??_TMR0_ISR+6
  2136  001346  CFDA F008          	movff	fsr2h,??_TMR0_ISR+7
  2137  00134A  CFF3 F009          	movff	prodl,??_TMR0_ISR+8
  2138  00134E  CFF4 F00A          	movff	prodh,??_TMR0_ISR+9
  2139  001352  CFF6 F00B          	movff	tblptrl,??_TMR0_ISR+10
  2140  001356  CFF7 F00C          	movff	tblptrh,??_TMR0_ISR+11
  2141  00135A  CFF8 F00D          	movff	tblptru,??_TMR0_ISR+12
  2142  00135E  CFF5 F00E          	movff	tablat,??_TMR0_ISR+13
  2143  001362  C04C  F00F         	movff	btemp,??_TMR0_ISR+14
  2144  001366  C04D  F010         	movff	btemp+1,??_TMR0_ISR+15
  2145  00136A  C04E  F011         	movff	btemp+2,??_TMR0_ISR+16
  2146  00136E  C04F  F012         	movff	btemp+3,??_TMR0_ISR+17
  2147                           
  2148                           ;servo.c: 123: if(INTCONbits.TMR0IF == 1)
  2149  001372  A4F2               	btfss	intcon,2,c	;volatile
  2150  001374  D01F               	goto	i2l68
  2151                           
  2152                           ;servo.c: 124: {
  2153                           ;servo.c: 125: cont_sr = cont_sr + 1;
  2154  001376  0E01               	movlw	1
  2155  001378  244A               	addwf	_cont_sr,w,c
  2156  00137A  6E4A               	movwf	_cont_sr,c
  2157  00137C  0E00               	movlw	0
  2158  00137E  204B               	addwfc	_cont_sr+1,w,c
  2159  001380  6E4B               	movwf	_cont_sr+1,c
  2160                           
  2161                           ;servo.c: 126: if(cont_sr > 490){
  2162  001382  0EEB               	movlw	235
  2163  001384  5C4A               	subwf	_cont_sr,w,c
  2164  001386  0E01               	movlw	1
  2165  001388  584B               	subwfb	_cont_sr+1,w,c
  2166  00138A  A0D8               	btfss	status,0,c
  2167  00138C  D004               	goto	i2l69
  2168                           
  2169                           ;servo.c: 127: cont_sr = 0;
  2170  00138E  0E00               	movlw	0
  2171  001390  6E4B               	movwf	_cont_sr+1,c
  2172  001392  0E00               	movlw	0
  2173  001394  6E4A               	movwf	_cont_sr,c
  2174  001396                     i2l69:
  2175                           
  2176                           ;servo.c: 128: }
  2177                           ;servo.c: 130: if(cont_sr < data_s[0]){LATBbits.LB7 = 1;} else{LATBbits.LB7 = 0;}
  2178  001396  0100               	movlb	0	; () banked
  2179  001398  5188               	movf	_data_s& (0+255),w,b
  2180  00139A  5C4A               	subwf	_cont_sr,w,c
  2181  00139C  0E00               	movlw	0
  2182  00139E  584B               	subwfb	_cont_sr+1,w,c
  2183  0013A0  B0D8               	btfsc	status,0,c
  2184  0013A2  D002               	goto	i2l70
  2185                           
  2186                           ; BSR set to: 0
  2187  0013A4  8E8A               	bsf	3978,7,c	;volatile
  2188  0013A6  D001               	goto	i2l71
  2189  0013A8                     i2l70:
  2190                           
  2191                           ; BSR set to: 0
  2192  0013A8  9E8A               	bcf	3978,7,c	;volatile
  2193  0013AA                     i2l71:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;servo.c: 161: TMR0 = 50;
  2197                           
  2198                           ; BSR set to: 0
  2199  0013AA  0E00               	movlw	0
  2200  0013AC  6ED7               	movwf	4055,c	;volatile
  2201  0013AE  0E32               	movlw	50
  2202  0013B0  6ED6               	movwf	4054,c	;volatile
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;servo.c: 162: INTCONbits.TMR0IF = 0;
  2206  0013B2  94F2               	bcf	intcon,2,c	;volatile
  2207  0013B4                     i2l68:
  2208                           
  2209                           ; BSR set to: 0
  2210  0013B4  C012  F04F         	movff	??_TMR0_ISR+17,btemp+3
  2211  0013B8  C011  F04E         	movff	??_TMR0_ISR+16,btemp+2
  2212  0013BC  C010  F04D         	movff	??_TMR0_ISR+15,btemp+1
  2213  0013C0  C00F  F04C         	movff	??_TMR0_ISR+14,btemp
  2214  0013C4  C00E  FFF5         	movff	??_TMR0_ISR+13,tablat
  2215  0013C8  C00D  FFF8         	movff	??_TMR0_ISR+12,tblptru
  2216  0013CC  C00C  FFF7         	movff	??_TMR0_ISR+11,tblptrh
  2217  0013D0  C00B  FFF6         	movff	??_TMR0_ISR+10,tblptrl
  2218  0013D4  C00A  FFF4         	movff	??_TMR0_ISR+9,prodh
  2219  0013D8  C009  FFF3         	movff	??_TMR0_ISR+8,prodl
  2220  0013DC  C008  FFDA         	movff	??_TMR0_ISR+7,fsr2h
  2221  0013E0  C007  FFD9         	movff	??_TMR0_ISR+6,fsr2l
  2222  0013E4  C006  FFE2         	movff	??_TMR0_ISR+5,fsr1h
  2223  0013E8  C005  FFE1         	movff	??_TMR0_ISR+4,fsr1l
  2224  0013EC  C004  FFEA         	movff	??_TMR0_ISR+3,fsr0h
  2225  0013F0  C003  FFE9         	movff	??_TMR0_ISR+2,fsr0l
  2226  0013F4  C002  FFFB         	movff	??_TMR0_ISR+1,pclatu
  2227  0013F8  C001  FFFA         	movff	??_TMR0_ISR,pclath
  2228  0013FC  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2229  0013FE  0011               	retfie		f
  2230  001400                     __end_of_TMR0_ISR:
  2231                           	opt stack 0
  2232  0000                     pclatu	equ	0xFFB
  2233                           pclath	equ	0xFFA
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           prodh	equ	0xFF4
  2239                           prodl	equ	0xFF3
  2240                           intcon	equ	0xFF2
  2241                           postinc0	equ	0xFEE
  2242                           fsr0h	equ	0xFEA
  2243                           fsr0l	equ	0xFE9
  2244                           wreg	equ	0xFE8
  2245                           fsr1h	equ	0xFE2
  2246                           fsr1l	equ	0xFE1
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           pclatu	equ	0xFFB
  2251                           pclath	equ	0xFFA
  2252                           tblptru	equ	0xFF8
  2253                           tblptrh	equ	0xFF7
  2254                           tblptrl	equ	0xFF6
  2255                           tablat	equ	0xFF5
  2256                           prodh	equ	0xFF4
  2257                           prodl	equ	0xFF3
  2258                           intcon	equ	0xFF2
  2259                           postinc0	equ	0xFEE
  2260                           fsr0h	equ	0xFEA
  2261                           fsr0l	equ	0xFE9
  2262                           wreg	equ	0xFE8
  2263                           fsr1h	equ	0xFE2
  2264                           fsr1l	equ	0xFE1
  2265                           fsr2h	equ	0xFDA
  2266                           fsr2l	equ	0xFD9
  2267                           status	equ	0xFD8
  2268                           
  2269                           	psect	rparam
  2270  0000                     pclatu	equ	0xFFB
  2271                           pclath	equ	0xFFA
  2272                           tblptru	equ	0xFF8
  2273                           tblptrh	equ	0xFF7
  2274                           tblptrl	equ	0xFF6
  2275                           tablat	equ	0xFF5
  2276                           prodh	equ	0xFF4
  2277                           prodl	equ	0xFF3
  2278                           intcon	equ	0xFF2
  2279                           postinc0	equ	0xFEE
  2280                           fsr0h	equ	0xFEA
  2281                           fsr0l	equ	0xFE9
  2282                           wreg	equ	0xFE8
  2283                           fsr1h	equ	0xFE2
  2284                           fsr1l	equ	0xFE1
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289                           	psect	temp
  2290  00004C                     btemp:
  2291                           	opt stack 0
  2292  00004C                     	ds	1
  2293  0000                     int$flags	set	btemp
  2294  0000                     wtemp6	set	btemp+1
  2295                           pclatu	equ	0xFFB
  2296                           pclath	equ	0xFFA
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           prodh	equ	0xFF4
  2302                           prodl	equ	0xFF3
  2303                           intcon	equ	0xFF2
  2304                           postinc0	equ	0xFEE
  2305                           fsr0h	equ	0xFEA
  2306                           fsr0l	equ	0xFE9
  2307                           wreg	equ	0xFE8
  2308                           fsr1h	equ	0xFE2
  2309                           fsr1l	equ	0xFE1
  2310                           fsr2h	equ	0xFDA
  2311                           fsr2l	equ	0xFD9
  2312                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      75
    BANK0           160     30      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___altoft
    _map->___aldiv
    ___aldiv->___lmul
    ___altoft->_map
    _Servo_1_Write->___awdiv
    _MPU6050_Init->_MPU6050_Write
    _MPU6050_Write->_I2C_Write

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___altoft
    ___altoft->_map

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5741
                                             28 BANK0      2     2      0
                    _I2C_Init_Master
                       _MPU6050_Init
                      _Servo_1_Write
                         _Servo_Init
                           ___altoft
                            ___fttol
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 32    12     20    1489
                                             44 COMRAM    12    12      0
                                              0 BANK0     20     0     20
                            ___aldiv
                            ___fttol (ARG)
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                             30 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                             18 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___altoft                                            10     6      4    3007
                                             56 COMRAM     2     2      0
                                             20 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2713
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Servo_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo_1_Write                                        1     1      0     474
                                             26 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         1     1      0     377
                                             24 COMRAM     1     1      0
                      _MPU6050_Write
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Write                                        2     1      1     377
                                             22 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            4     4      0      29
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init_Master                                      1     1      0      66
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init_Master
   _MPU6050_Init
     _MPU6050_Write
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _Servo_1_Write
     ___awdiv
   _Servo_Init
   ___altoft
     ___ftpack
     ___fttol (ARG)
     _map (ARG)
       ___aldiv
         ___lmul (ARG)
       ___fttol (ARG)
       ___lmul (ARG)
   ___fttol
   _map
     ___aldiv
       ___lmul (ARG)
     ___fttol (ARG)
     ___lmul (ARG)

 _TMR0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      39       5       35.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      84      20        0.0%
DATA                 0      0      84       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Nov 30 22:59:31 2022

            ___altoft@exp 0039        __size_of_I2C_Start 000A             ___altoft@sign 003A  
      __size_of_I2C_Write 0020                        l91 1748                        l98 17FE  
            ___awdiv@sign 0018                        _v1 003B                        _ax 0047  
                      _ay 0044                        _az 0041                        _gx 003E  
                      _gy 0096                        _gz 0093               __CFG_BORV$3 000000  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000                       l104 17F4                       l128 17A0  
                     l304 16E2                       l305 16F6                       l510 1528  
                     l511 1512                       l351 1462                       l352 1456  
                     l513 1550                       l514 1546                       l610 11E0  
                     l507 14F4                       l355 1496                       l460 158E  
                     l508 14EA                       l356 14A4                       l348 141C  
                     l461 159E                       l357 14BA                       l349 1434  
                     l463 15BC                       l615 1214                       l607 117A  
                     l464 15B4                       l616 1208                       l377 162E  
                     l609 11F0                       l378 1622                       l618 1230  
                     l467 15DC                       l468 15E6                       l469 15F4  
            __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000                       u820 1466  
                     u680 17B0                       u951 115E                       u688 17B2  
                     u880 15C0                       u970 1198                       u975 1190  
            __CFG_BOR$OFF 000000                       _map 1242                       wreg 000FE8  
            __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000                      ?_map 0060  
                    u1010 121A                      u1110 155A                      u1070 14DC  
                    u1207 1140                      u1217 1688                      u1227 16A2  
                    u1237 16BC                      u1167 103A                      u1177 10E0  
                    u1187 1100                      u1197 1120                      i2l70 13A8  
                    i2l71 13AA                      i2l68 13B4                      i2l69 1396  
                    _TMR0 000FD6    __size_of_MPU6050_Write 001E                      _main 1012  
            ___ftpack@arg 0013              ___ftpack@exp 0016                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr2h 000FDA                      fsr0l 000FE9  
                    fsr1l 000FE1                      map@x 0060                      fsr2l 000FD9  
                    btemp 004C          __end_of_I2C_Stop 17FC                      prodh 000FF4  
                    prodl 000FF3                      start 100E          ?_I2C_Init_Master 0001  
           __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000              ___param_bank 000000  
            ___fttol@exp1 0021                     ??_map 002D              ___fttol@lval 001D  
           __CFG_PLLDIV$2 000000            __CFG_CCP2MX$ON 000000           __end_of___aldiv 14CC  
                   ?_main 0001           __end_of___awdiv 15FE                     _T0CON 000FD5  
         ___awdiv@divisor 0015           __end_of___fttol 1242           ___awdiv@counter 0017  
                   _PORTD 000F83             __CFG_USBDIV$2 000000                     _TRISD 000F95  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000       ___lmul@multiplicand 0017             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000          __end_of_TMR0_ISR 1400  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000             ?_MPU6050_Init 0001             ___ftpack@sign 0017  
                   _value 0090         __end_of_I2C_Start 1806         __end_of_I2C_Write 17BA  
                   pclath 000FFA                     tablat 000FF5                     status 000FD8  
                   wtemp6 004D            __CFG_ICPRT$OFF 000000           __initialization 1778  
            __end_of_main 114E             _MPU6050_Write 17BA                    ??_main 007C  
           ___fttol@sign1 001C             __activetblptr 000000         MPU6050_Write@data 0017  
          ??_MPU6050_Init 0019          __end_of___altoft 1678          ___awdiv@dividend 0013  
        __end_of___ftpack 157A                    _SSPADD 000FC8                    _SSPBUF 000FC9  
   __end_of_Servo_1_Write 1778            __CFG_XINST$OFF 000000                    ___lmul 16D2  
               ??___aldiv 0027                 ??___awdiv 0017            __CFG_STVREN$ON 000000  
                  _data_s 0088                 ??___fttol 0017                    _buffer 007E  
              _Servo_Init 17D8            ?_MPU6050_Write 0017                    clear_0 177E  
                  clear_1 178A          ___awdiv@quotient 0019                 ?_I2C_Stop 0001  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 1790                ___altoft@c 0074  
         __CFG_PBADEN$OFF 000000             ___rparam_used 000001                ___fttol@f1 0013  
          __pcstackCOMRAM 0001                 ?_TMR0_ISR 0001                ??_I2C_Stop 0013  
              __pbssBANK0 007E                   ?___lmul 0013      __end_of_MPU6050_Init 16D2  
              ??_TMR0_ISR 0001           ??_MPU6050_Write 0018               ?_Servo_Init 0001  
               ?___altoft 0074            ___lmul@product 001B                 ?___ftpack 0013  
                 _SSPCON1 000FC6                   _SSPCON2 000FC5                   _SSPSTAT 000FC7  
         __CFG_VREGEN$OFF 000000                 _I2C_Start 17FC                 _I2C_Write 179A  
                 __Hparam 0000                   __Lparam 0000                   ___aldiv 1400  
                 ___awdiv 157A           __size_of___lmul 0056                   ___fttol 114E  
              ??___altoft 0078  __size_of_I2C_Init_Master 002C                   __pcinit 1778  
              ??___ftpack 0018                   __ramtop 0800                   __ptext0 1012  
                 __ptext1 1242                   __ptext2 16D2                   __ptext3 1400  
                 __ptext4 114E                   __ptext5 15FE                   __ptext6 14CC  
                 __ptext7 17D8                   __ptext8 1754                   __ptext9 157A  
               _T0CONbits 000FD5                   _cont_sr 004A              __size_of_map 00E6  
        ___aldiv@dividend 001F                   map@eMax 0068                   map@eMin 0064  
                 map@sMax 0070                   map@sMin 006C            __pintcode_body 1328  
    end_of_initialization 1790       __size_of_Servo_Init 001A                   int_func 1328  
              ?_I2C_Start 0001                ?_I2C_Write 0001          ___aldiv@quotient 0029  
                 postinc0 000FEE                 _TRISBbits 000F93                 _TRISDbits 000F95  
       __size_of_I2C_Stop 000A     __size_of_MPU6050_Init 005A            __end_of___lmul 1728  
       __size_of_TMR0_ISR 03F8    __size_of_Servo_1_Write 0024       start_initialization 1778  
       ??_I2C_Init_Master 0013               __end_of_map 1328     I2C_Init_Master@sp_i2c 0013  
            _MPU6050_Init 1678          MPU6050_Write@add 0018               ??_I2C_Start 0013  
             ??_I2C_Write 0013                  ??___lmul 001B              ??_Servo_Init 0013  
        __CFG_LPT1OSC$OFF 000000         __size_of___altoft 007A         __size_of___ftpack 00AE  
             __pbssCOMRAM 003B             __pcstackBANK0 0060        __end_of_Servo_Init 17F2  
           _Servo_1_Write 1754                 __pintcode 1008                  ?___aldiv 001F  
                ?___awdiv 0013                  ?___fttol 0013     __end_of_MPU6050_Write 17D8  
        Servo_1_Write@ang 001B                  _I2C_Stop 17F2           ___aldiv@divisor 0023  
         ___aldiv@counter 0027            ?_Servo_1_Write 0001                  _LATBbits 000F8A  
                _LATDbits 000F8C                  _PIR1bits 000F9E          __CFG_WDTPS$32768 000000  
                _TMR0_ISR 1008                _ADCON1bits 000FC1         ___lmul@multiplier 0013  
                __Hrparam 0000                  __Lrparam 0000             I2C_Write@b_ok 0014  
         _I2C_Init_Master 1728             I2C_Write@data 0016          __size_of___aldiv 00CC  
        __size_of___awdiv 0084                  ___altoft 15FE          __size_of___fttol 00F4  
                ___ftpack 14CC                  __ptext10 1678                  __ptext11 17BA  
                __ptext12 179A                  __ptext13 17F2                  __ptext14 17FC  
                __ptext15 1728           ??_Servo_1_Write 001B             __size_of_main 013C  
                int$flags 004C     __CFG_CPUDIV$OSC1_PLL2 000000                _INTCONbits 000FF2  
                intlevel2 0000   __end_of_I2C_Init_Master 1754              ___aldiv@sign 0028  
             _SSPCON2bits 000FC5        __CFG_FOSC$HSPLL_HS 000000  
